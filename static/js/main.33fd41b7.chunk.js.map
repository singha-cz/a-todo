{"version":3,"sources":["components/Button/Button.module.scss","components/Task/Task.module.scss","components/TaskList/TaskList.module.scss","components/Filters/Filters.module.scss","components/Progress/Progress.module.scss","components/ButtonGroup/ButtonGroup.module.scss","App.module.scss","components/Button/Button.js","context/todo.context.js","components/Task/Task.js","components/ButtonGroup/ButtonGroup.js","components/Filters/Filters.js","components/Progress/Progress.js","components/TaskList/TaskList.js","App.js","index.js"],"names":["module","exports","Button","props","str","onClick","disabled","outline","link","children","title","color","icon","circle","active","className","css","btn","charAt","toUpperCase","slice","btnOutline","btnLink","activeButton","TodoContext","React","createContext","TodoContextProvider","useState","JSON","parse","localStorage","getItem","state","setState","filter","setFilter","useEffect","setItem","stringify","Provider","value","remove","taskId","item","id","complete","now","Date","newTasks","map","completed","activeTasks","completedTasks","length","allActive","allCompleted","addTask","e","newTask","created","save","saved","doFilter","f","library","add","faTimes","faCircle","faCheckCircle","Task","editable","setEditable","handlers","useContext","click","doSave","target","handleFocus","select","TaskName","taskNameInput","type","name","defaultValue","onBlur","onKeyUp","code","keyCode","keyUp","onFocus","autoFocus","timeCompleted","taskCompleted","toLocaleString","taskCreated","taskTitle","pointer","taskItem","primary","size","ButtonGroup","buttonGroup","Filters","Badge","filterBadge","style","backgroundColor","tasks","filters","Progress","percentage","progressStyle","width","undefined","maximumFractionDigits","progressBarContainer","progressBar","faPlus","faSearch","TaskList","search","setSearch","filteredTasks","ft","filterTasks","toLowerCase","includes","taskCount","taskList","key","savedTasks","addButton","searchBox","placeholder","onChange","searchButton","App","app","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4FACAA,EAAOC,QAAU,CAAC,IAAM,oBAAoB,WAAa,2BAA2B,aAAe,6BAA6B,QAAU,wBAAwB,WAAa,2BAA2B,QAAU,wBAAwB,OAAS,uBAAuB,aAAe,+B,kBCA3RD,EAAOC,QAAU,CAAC,QAAU,UAAU,SAAW,uBAAuB,OAAS,qBAAqB,cAAgB,4BAA4B,QAAU,sBAAsB,UAAY,0B,iBCA9LD,EAAOC,QAAU,CAAC,SAAW,2BAA2B,UAAY,4BAA4B,aAAe,+BAA+B,UAAY,8B,kBCA1JD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,YAAc,+B,gBCAnED,EAAOC,QAAU,CAAC,qBAAuB,uCAAuC,YAAc,gC,mBCA9FD,EAAOC,QAAU,CAAC,YAAc,mC,gBCAhCD,EAAOC,QAAU,CAAC,IAAM,mB,2LC4CTC,EAzCA,SAACC,GAAW,IAePC,EAfM,EAanBD,GAAS,GAXVE,EAFoB,EAEpBA,QACEC,EAHkB,EAGlBA,SAHkB,IAIlBC,eAJkB,SAKlBC,EALkB,EAKlBA,KACAC,EANkB,EAMlBA,SANkB,IAOlBC,aAPkB,MAOV,GAPU,MAQlBC,aARkB,MAQV,UARU,MASlBC,YATkB,aAUlBC,cAVkB,aAWlBC,cAXkB,aAYlBC,iBAZkB,MAYN,GAZM,EAiBvB,OACG,4BACGV,QAASA,EACTC,SAAUA,EACVI,MAAOA,EACPK,UAAS,wBACJC,IAAIC,IADA,0BAEJN,EAAMK,IAAI,MAAD,QATHZ,EASkBO,EATVP,EAAIc,OAAO,GAAGC,cAAgBf,EAAIgB,MAAM,MASpB,GAF9B,0BAGJb,EAAQS,IAAIK,WAAW,GAHnB,2BAIJb,EAAKQ,IAAIM,QAAQ,GAJb,0BAKJT,EAAOG,IAAIH,OAAO,GALd,yBAMJE,EANI,yBAOJD,EAAOE,IAAIO,aAAa,GAPpB,gBAWNX,GACA,kBAAC,IAAD,CAAiBA,KAAMA,IAEzBH,I,6BCvCJe,EAAcC,IAAMC,cAAc,CAAC,GAAI,eAEvCC,EAAsB,SAACxB,GAAW,IAAD,EACVyB,mBAASC,KAAKC,MAAMC,aAAaC,QAAQ,WAAa,IAD5C,mBAC7BC,EAD6B,KACtBC,EADsB,OAERN,mBAAS,OAFD,mBAE7BO,EAF6B,KAErBC,EAFqB,KAIpCC,qBAAU,WACPN,aAAaO,QAAQ,QAAST,KAAKU,UAAUN,MAC7C,CAACA,IA+CJ,OACG,kBAACT,EAAYgB,SAAb,CAAsBC,MAAO,CAACR,EAAO,CAClCC,SAAUA,EACVQ,OAhDS,SAACC,GACbT,EAAS,YAAID,EAAME,QAAO,SAAAS,GAAI,OAAIA,EAAKC,KAAOF,QAgD3CG,SA7CW,SAACH,GACf,IAAMI,EAAMC,KAAKD,MACXE,EAAWhB,EAAMiB,KAAI,SAAAN,GAGxB,OAFIA,EAAKC,KAAOF,IACbC,EAAKO,UAAYP,EAAKO,UAAY,KAAOJ,GACrCH,KAEJQ,EAAcH,EAASd,QAAO,SAAAS,GAAI,OAAKA,EAAKO,aAC5CE,EAAiBJ,EAASK,OAASF,EAAYE,OAC/CC,EAAYH,EAAYE,SAAWL,EAASK,OAC5CE,EAAeH,IAAmBJ,EAASK,OACjDpB,EAASe,IACLM,GAAaC,IAAcpB,EAAU,QAkCtCqB,QA/BU,SAACC,GACd,IAAMX,EAAMC,KAAKD,MACXY,EAAU,CACbjD,MAAM,WACJkD,QAASb,EACTF,GAAIE,GAETb,EAAS,GAAD,mBAAKD,GAAL,CAAY0B,KACpBvB,EAAU,QAwBPyB,KArBO,SAAClB,EAAQjC,GACnB,IAAMuC,EAAWhB,EAAMiB,KAAI,SAAAN,GAKxB,OAJIA,EAAKC,KAAOF,IACbC,EAAKlC,MAAQA,GAAS,wBACtBkC,EAAKkB,OAAQ,GAETlB,KAEVV,EAASe,IAcNc,SAXW,SAACC,GACf5B,EAAU4B,KAWP7B,IAEChC,EAAMM,WC1DhBwD,IAAQC,IAAIC,IAASC,IAAUC,KAE/B,IAyEeC,EAzEF,SAACnE,GAAW,IAAD,EACWyB,oBAAS,GADpB,mBACd2C,EADc,KACJC,EADI,KAEfC,EAAWC,qBAAWlD,GAAa,GAFpB,EASjBrB,GAAS,GALV0C,EAJkB,EAIlBA,GAJkB,IAKhBM,iBALgB,MAKJ,GALI,MAMhBS,eANgB,MAMN,GANM,MAOhBlD,aAPgB,MAOR,GAPQ,MAQhBoD,aARgB,WAejBW,GAAY,GAfK,IAYlB/B,cAZkB,MAYT,aAZS,MAahBI,gBAbgB,MAaL,aAbK,MAchBe,YAdgB,MAcT,aAdS,EAiBfc,EAAQ,kBAAMH,GAAaD,IAE3BK,EAAS,SAAClB,EAAGb,GAChB2B,GAAY,GACZX,EAAKhB,EAAIa,EAAEmB,OAAOpC,QAYfqC,EAAc,SAACpB,GAAD,OAAOA,EAAEmB,OAAOE,UAE9BC,EAAW,SAAC,GAAgB,IAAfT,EAAc,EAAdA,SACVU,EAAgB,2BACnBC,KAAK,OACLnE,UAAU,eACVoE,KAAK,WACLC,aAAc1E,EACd2E,OAAQ,SAAC3B,GAAD,OAAOkB,EAAOlB,EAAGb,IACzByC,QAAS,SAAC5B,GAAD,OAlBD,SAACA,EAAGb,GACf,IAAM0C,EAAO7B,EAAE8B,QACF,KAATD,GAAaX,EAAOlB,EAAGb,GACd,KAAT0C,IACIzB,EACGU,GAAY,GADR9B,EAAOG,IAcH4C,CAAM/B,EAAGb,IACzB6C,QAASZ,EACTa,WAAS,IAGNC,EAAgBzC,EAAW,IAAIH,KAAKG,GAAY,GAChD0C,EAAgB1C,EAAS,uBAAmByC,EAAcE,kBAAqB,GAC/EC,EAAc,IAAI/C,KAAKY,GACvBoC,EAAS,mBAAeD,EAAYD,iBAA3B,YAA+CD,EAA/C,qBACf,OAAQtB,IAAaT,EAAQmB,EAAgB,0BAC1CvE,MAAOsF,EACP3F,QAASsE,EACT5D,UAAS,UAAKoC,EAAYnC,IAAI6E,cAAgB,GAArC,YAA2C7E,IAAIiF,UAEvDvF,IAIP,OACG,wBAAIK,UAAWC,IAAIkF,UAChB,8BACG,kBAAC,EAAD,CAAQ1F,MAAI,EAACH,QAAS,kBAAMyC,EAASD,IAAKnC,MAAOyC,EAAY,mBAAqB,kBAC/E,kBAAC,IAAD,CAAiBxC,MAAOwC,EAAYnC,IAAImF,QAAU,GAAIC,KAAK,KAAKxF,KAAM,CAAC,MAAOuC,EAAY,eAAiB,aAFjH,IAGa,kBAAC6B,EAAD,CAAUT,SAAUA,KAJpC,IAKW,0BAAMxD,UAAWC,IAAI0B,QAC1B,kBAAC,EAAD,CAAQhC,MAAM,SAASF,MAAI,EAACH,QAAS,kBAAMqC,EAAOG,IAAKjC,KAAM,a,iBCpE1DyF,EANK,SAAClG,GAClB,OAAO,yBAAKY,UAAWC,IAAIsF,aACvBnG,EAAMM,W,iBCsCE8F,EApCC,WACb,IAAMC,EAAQ,SAAC,GAAsB,IAApB/D,EAAmB,EAAnBA,MAAO9B,EAAY,EAAZA,MACrB,OAAQ,0BAAMI,UAAWC,IAAIyF,YAAaC,MAAO,CAAEC,gBAAiBhG,GAAgB,KAAO8B,IAF3E,EAIeiC,qBAAWlD,GAJ1B,mBAIZoF,EAJY,KAILnC,EAJK,KAIKtC,EAJL,KAKX4B,GAAaU,GAAY,IAAzBV,SACFX,EAAcwD,EAAMzE,QAAO,SAAAS,GAAI,OAAKA,EAAKO,aAC/C,OAAO,yBAAKpC,UAAWC,IAAI6F,SACxB,kBAAC,EAAD,KACG,kBAAC,EAAD,CACG/F,OAAmB,QAAXqB,EACR5B,SAAO,EACPI,MAAkB,QAAXwB,EAAmB,OAAS,YACnC9B,QAAS,kBAAM0D,EAAS,SAJ3B,aAOY,kBAAC,EAAD,CACTjD,OAAmB,WAAXqB,EACR5B,SAAO,EACPI,MAAkB,WAAXwB,EAAsB,OAAS,YACtC9B,QAAS,kBAAM0D,EAAS,YAJf,UAMF,kBAACyC,EAAD,CACP/D,MAAOW,EAAYE,UACb,kBAAC,EAAD,CACNxC,OAAmB,cAAXqB,EACR5B,SAAO,EACPI,MAAkB,cAAXwB,EAAyB,OAAS,YACzC9B,QAAS,kBAAM0D,EAAS,eAJlB,gB,iBCzBlBE,IAAQC,IAAIC,IAASC,IAAUC,KAE/B,IAmBeyC,EAnBE,WACd,IAAM7E,EAAQyC,qBAAWlD,GAAa,GAEhCuF,EAAgC,IADpB9E,EAAME,QAAO,SAAAS,GAAI,OAAIA,EAAKO,aACfG,OAAerB,EAAMqB,OAC5C0D,EAAgB,CACnBC,MAAM,GAAD,OAAKF,EAAL,KACHJ,gBAAgB,OAAD,OAAsB,EAAbI,EAAT,gBAGpB,OACG,yBAAKhG,UAAU,eACZ,wBAAIA,UAAU,kBAAkBgG,EAAWjB,oBAAeoB,EAAW,CAACC,sBAAuB,IAA7F,gBACA,yBAAKpG,UAAWC,IAAIoG,sBACjB,yBAAKrG,UAAWC,IAAIqG,YAAaX,MAAOM,O,iBCXpD/C,IAAQC,IAAIoD,IAAQC,KAEpB,IA+FeC,EA/FE,WAAO,IAAD,EACQ5F,qBADR,mBACb6F,EADa,KACLC,EADK,OAEchD,qBAAWlD,GAFzB,mBAEboF,EAFa,KAENnC,EAFM,KAEItC,EAFJ,KAIjBsB,GACCgB,GAAY,IADbhB,QAiCGkE,EArBc,SAAC3D,EAAG4C,GACrB,IAAIgB,EAAK,GACT,OAAO5D,GACJ,IAAK,MACF4D,EAAKhB,EACL,MAEH,IAAK,SACFgB,EAAKhB,EAAMzE,QAAO,SAAAS,GAAI,OAAKA,EAAKO,aAChC,MAEH,IAAK,YACFyE,EAAKhB,EAAMzE,QAAO,SAAAS,GAAI,OAAIA,EAAKO,aAC/B,MAEH,QACGyE,EAAKhB,EAGX,OAAOgB,EAEYC,CAAY1F,EA1BZsF,EAASb,EAAMzE,QAAO,SAAAS,GACzC,OAAOA,EAAKlC,MAAMoH,cAAcC,SAASN,EAAOK,kBAC9ClB,GA0BCoB,EAAYL,EAAcrE,OAC1B2E,EAAWN,EAAcrE,OAAS,EAAIqE,EAAczE,KAAI,SAAAN,GAAI,OAAI,kBAAC,EAAD,iBAAUA,EAAV,CAAgBsF,IAAKtF,EAAKC,SAAU,GAEpGO,EAAcwD,EAAMzE,QAAO,SAAAS,GAAI,OAAKA,EAAKO,aACzCE,EAAiBuD,EAAMtD,OAASF,EAAYE,OAC5CC,EAAYqD,EAAMtD,SAAWF,EAAYE,OACzCE,EAAeoD,EAAMtD,SAAWD,EAEhC8E,EAAavB,EAAMzE,QAAO,SAAAS,GAAI,OAAIA,EAAKkB,SAAOR,OACpD,OACG,oCAEM6E,EAAa,GACb,kBAAC,EAAD,MAEH,wCAGMH,EAAY,GACZ,mCAASA,EAAT,KAEH,kBAAC,EAAD,CAAQrH,MAAM,UAAUE,QAAM,EAACR,QAASoD,EAAS7C,KAAK,OAAOF,MAAM,WAAWK,UAAWC,IAAIoH,aAG7FD,EAAa,GACb,yBAAKpH,UAAWC,IAAIqH,WACjB,2BACGnD,KAAK,OACLC,KAAK,SACL1C,MAAOgF,GAAkB,GACzBa,YAAY,qBACZvH,UAAU,gCACVwH,SAAU,SAAC7E,GAAD,OAAOgE,EAAUhE,EAAEmB,OAAOpC,QACpC6C,QAjED,SAAC5B,GACM,KAAdA,EAAE8B,SAAgBkC,EAAU,KAiEpBhH,MAAO,kEAEV,kBAAC,IAAD,CAAiBE,KAAK,SAASD,MAAM,SAASI,UAAWC,IAAIwH,gBAIhEL,EAAa,IAAM3E,IAAiBD,GACpC,kBAAC,EAAD,MAEH,6BAEMoE,EAAcrE,OAAS,GACvB,2BAAG,qDAEN,wBAAIvC,UAAWC,IAAIiH,UACfA,M,iBCrFDQ,EAVH,WACT,OACG,yBAAK1H,UAAWC,IAAI0H,KACjB,kBAAC,EAAD,KACG,kBAAC,EAAD,SCJZC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.33fd41b7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"Button_btn__1qODl\",\"btnPrimary\":\"Button_btnPrimary__JX4ld\",\"btnSecondary\":\"Button_btnSecondary__2hW3p\",\"btnDark\":\"Button_btnDark__1v_PM\",\"btnOutline\":\"Button_btnOutline__1fhyF\",\"btnLink\":\"Button_btnLink__1tfto\",\"circle\":\"Button_circle__FDTgb\",\"activeButton\":\"Button_activeButton__1C0A9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"primary\":\"#045bbe\",\"taskItem\":\"Task_taskItem__2yqp7\",\"remove\":\"Task_remove__1DEoB\",\"taskCompleted\":\"Task_taskCompleted__3wkCO\",\"pointer\":\"Task_pointer__2cEif\",\"highlight\":\"Task_highlight__lgmZq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"taskList\":\"TaskList_taskList__2tkvE\",\"addButton\":\"TaskList_addButton__3Loh7\",\"searchButton\":\"TaskList_searchButton__1Gmad\",\"searchBox\":\"TaskList_searchBox__3i3dF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filters\":\"Filters_filters__3pO4f\",\"filterBadge\":\"Filters_filterBadge__3Lt8z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"progressBarContainer\":\"Progress_progressBarContainer__1ZEpK\",\"progressBar\":\"Progress_progressBar__2hvSJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonGroup\":\"ButtonGroup_buttonGroup__1xJqc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__1jdVP\"};","import React from 'react';\r\nimport css from './Button.module.scss';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nconst Button = (props) => {\r\n   const {\r\n      onClick\r\n      , disabled\r\n      , outline = false\r\n      , link\r\n      , children\r\n      , title = \"\"\r\n      , color = \"primary\"\r\n      , icon = false\r\n      , circle = false\r\n      , active = false\r\n      , className = \"\"\r\n   } = props || {};\r\n\r\n   const ucfirst = (str) => str.charAt(0).toUpperCase() + str.slice(1);\r\n\r\n   return (\r\n      <button \r\n         onClick={onClick} \r\n         disabled={disabled} \r\n         title={title}\r\n         className={`\r\n            ${css.btn} \r\n            ${color?css[`btn${ucfirst(color)}`]:\"\"} \r\n            ${outline?css.btnOutline:\"\"}  \r\n            ${link?css.btnLink:\"\"} \r\n            ${circle?css.circle:\"\"}\r\n            ${className}\r\n            ${active?css.activeButton:\"\"}\r\n         `}\r\n      >\r\n         {\r\n            icon &&\r\n            <FontAwesomeIcon icon={icon} />\r\n         }\r\n         {children}\r\n      </button>\r\n   );\r\n}\r\n\r\nexport default Button;","import React, {useState, useEffect} from 'react';\r\nconst TodoContext = React.createContext([{}, ()=>{}]);\r\n\r\nconst TodoContextProvider = (props) => {\r\n   const [state, setState] = useState(JSON.parse(localStorage.getItem('tasks')) || []);\r\n   const [filter, setFilter] = useState(\"all\");\r\n\r\n   useEffect(() => {\r\n      localStorage.setItem('tasks', JSON.stringify(state));\r\n   }, [state]);   \r\n\r\n   const remove = (taskId) => {\r\n      setState([...state.filter(item => item.id !== taskId)]);\r\n   }\r\n\r\n   const complete = (taskId) => {\r\n      const now = Date.now();      \r\n      const newTasks = state.map(item => {\r\n         if (item.id === taskId)\r\n            item.completed = item.completed ? null : now;\r\n         return item;\r\n      });\r\n      const activeTasks = newTasks.filter(item => !item.completed);\r\n      const completedTasks = newTasks.length - activeTasks.length;\r\n      const allActive = activeTasks.length === newTasks.length;\r\n      const allCompleted = completedTasks === newTasks.length;\r\n      setState(newTasks);\r\n      if (allActive || allCompleted) setFilter(\"all\");\r\n   }   \r\n\r\n   const addTask = (e) => {\r\n      const now = Date.now();       \r\n      const newTask = {\r\n         title: `New Task`\r\n         , created: now\r\n         , id: now\r\n      };\r\n      setState([...state, newTask]);\r\n      setFilter(\"all\")\r\n   }\r\n\r\n   const save = (taskId, title) => {\r\n      const newTasks = state.map(item => {\r\n         if (item.id === taskId) {\r\n            item.title = title || \"-- no-name task :/ --\";\r\n            item.saved = true;\r\n         }\r\n         return item;\r\n      });\r\n      setState(newTasks);\r\n   }\r\n\r\n   const doFilter = (f) => {\r\n      setFilter(f);\r\n   }\r\n\r\n   return (\r\n      <TodoContext.Provider value={[state, {\r\n         setState: setState, \r\n         remove: remove, \r\n         complete: complete, \r\n         addTask: addTask, \r\n         save: save,\r\n         doFilter: doFilter\r\n      }, filter\r\n      ]}>\r\n         {props.children}\r\n      </TodoContext.Provider>\r\n   );\r\n}\r\n\r\nexport { TodoContext, TodoContextProvider }\r\n","import React, { useState, useContext } from 'react';\r\nimport css from './Task.module.scss';\r\nimport Button from '../Button/Button';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\nimport { faCircle, faCheckCircle } from '@fortawesome/free-regular-svg-icons';\r\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\r\nimport { TodoContext } from '../../context/todo.context';\r\nlibrary.add(faTimes, faCircle, faCheckCircle);\r\n\r\nconst Task = (props) => {\r\n   const [editable, setEditable] = useState(false);\r\n   const handlers = useContext(TodoContext)[1];\r\n   const {\r\n      id\r\n      , completed = \"\"\r\n      , created = \"\"\r\n      , title = \"\"\r\n      , saved = false\r\n   } = props || {};\r\n\r\n   const {\r\n      remove = () => { }\r\n      , complete = () => { }\r\n      , save = () => { }\r\n   } = handlers || {};\r\n\r\n   const click = () => setEditable(!editable);\r\n\r\n   const doSave = (e, id) => {\r\n      setEditable(false);\r\n      save(id, e.target.value);\r\n   }\r\n\r\n   const keyUp = (e, id) => {\r\n      const code = e.keyCode;\r\n      if (code === 13) doSave(e, id);\r\n      if (code === 27) {\r\n         if (!saved) remove(id);\r\n            else setEditable(false);\r\n      }\r\n   }\r\n\r\n   const handleFocus = (e) => e.target.select();\r\n   \r\n   const TaskName = ({editable}) => {\r\n      const taskNameInput = <input\r\n         type=\"text\"\r\n         className=\"form-control\"\r\n         name=\"newTitle\"\r\n         defaultValue={title}\r\n         onBlur={(e) => doSave(e, id)}\r\n         onKeyUp={(e) => keyUp(e, id)}\r\n         onFocus={handleFocus}\r\n         autoFocus\r\n      />;\r\n\r\n      const timeCompleted = completed? new Date(completed): \"\";\r\n      const taskCompleted = completed ? `, Completed: ${timeCompleted.toLocaleString()}` : \"\";\r\n      const taskCreated = new Date(created);\r\n      const taskTitle = `Created: ${taskCreated.toLocaleString()} ${taskCompleted} - Click to edit `;\r\n      return  editable || !saved ? taskNameInput : <span\r\n         title={taskTitle}\r\n         onClick={click}\r\n         className={`${completed ? css.taskCompleted : \"\"} ${css.pointer}`}\r\n      >\r\n         {title}\r\n      </span>;\r\n   }\r\n\r\n   return (\r\n      <li className={css.taskItem}>\r\n         <span>\r\n            <Button link onClick={() => complete(id)} title={completed ? \"Mark incompleted\" : \"Mark completed\"}>\r\n               <FontAwesomeIcon color={completed ? css.primary : \"\"} size=\"lg\" icon={[\"far\", completed ? \"check-circle\" : \"circle\"]} />\r\n            </Button> <TaskName editable={editable} />\r\n         </span> <span className={css.remove}>\r\n            <Button title=\"Delete\" link onClick={() => remove(id)} icon={\"times\"} />\r\n         </span>\r\n      </li>\r\n   );\r\n}\r\n\r\nexport default Task;","import React from 'react';\r\nimport css from './ButtonGroup.module.scss';\r\n\r\nconst ButtonGroup = (props) => {\r\n   return <div className={css.buttonGroup}>\r\n      {props.children}\r\n   </div>\r\n}\r\n\r\nexport default ButtonGroup;","import React, { useContext } from 'react';\r\nimport { TodoContext } from '../../context/todo.context';\r\nimport Button from '../Button/Button';\r\nimport ButtonGroup from '../ButtonGroup/ButtonGroup';\r\nimport css from './Filters.module.scss';\r\n\r\n\r\nconst Filters = () => {\r\n   const Badge = ({ value, color }) => {\r\n      return (<span className={css.filterBadge} style={{ backgroundColor: color ? color : \"\" }}>{value}</span>)\r\n   }\r\n   const [tasks, handlers, filter] = useContext(TodoContext);\r\n   const { doFilter } = handlers || {};\r\n   const activeTasks = tasks.filter(item => !item.completed);\r\n   return <div className={css.filters}>\r\n      <ButtonGroup>\r\n         <Button \r\n            active={filter === \"all\"} \r\n            outline \r\n            color={filter === \"all\" ? \"dark\" : \"secondary\"} \r\n            onClick={() => doFilter(\"all\")}\r\n         >\r\n            All tasks\r\n            </Button><Button \r\n            active={filter === \"active\"} \r\n            outline \r\n            color={filter === \"active\" ? \"dark\" : \"secondary\"} \r\n            onClick={() => doFilter(\"active\")}\r\n         >\r\n            Active <Badge \r\n            value={activeTasks.length} />\r\n         </Button><Button \r\n            active={filter === \"completed\"} \r\n            outline \r\n            color={filter === \"completed\" ? \"dark\" : \"secondary\"} \r\n            onClick={() => doFilter(\"completed\")}\r\n         >\r\n            Completed\r\n         </Button>\r\n      </ButtonGroup>\r\n   </div>\r\n}\r\n\r\nexport default Filters;","import React, { useContext } from 'react';\r\nimport css from './Progress.module.scss';\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\nimport { faCircle, faCheckCircle } from '@fortawesome/free-regular-svg-icons';\r\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\r\nimport { TodoContext } from '../../context/todo.context';\r\nlibrary.add(faTimes, faCircle, faCheckCircle);\r\n\r\nconst Progress = () => {\r\n   const state = useContext(TodoContext)[0];\r\n   const completed = state.filter(item => item.completed);\r\n   const percentage = completed.length * 100 / state.length;\r\n   const progressStyle = {\r\n      width: `${percentage}%`\r\n      , backgroundColor: `hsl(${percentage * 1}, 60%, 45%)`\r\n   }\r\n\r\n   return (\r\n      <div className=\"text-center\">\r\n         <h5 className=\"m-0 text-muted\">{percentage.toLocaleString(undefined, {maximumFractionDigits: 1})} % completed</h5>\r\n         <div className={css.progressBarContainer}>\r\n            <div className={css.progressBar} style={progressStyle} ></div>\r\n         </div>\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default Progress;","import React, { useState, useContext } from 'react';\r\nimport Task from '../Task/Task';\r\nimport Filters from '../../components/Filters/Filters';\r\nimport { TodoContext } from '../../context/todo.context';\r\nimport Button from '../../components/Button/Button';\r\nimport Progress from '../../components/Progress/Progress';\r\nimport css from './TaskList.module.scss';\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\nimport { faPlus, faSearch } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nlibrary.add(faPlus, faSearch);\r\n\r\nconst TaskList = () => {\r\n   const [search, setSearch] = useState();\r\n   const [tasks, handlers, filter] = useContext(TodoContext);\r\n   const {\r\n      addTask\r\n   } = handlers || {};\r\n\r\n   const keyUp = (e) => {\r\n      if (e.keyCode === 27) setSearch(\"\");\r\n   }\r\n\r\n   const searchedTasks = search ? tasks.filter(item => {\r\n      return item.title.toLowerCase().includes(search.toLowerCase())\r\n   }) : tasks;\r\n\r\n\r\n   const filterTasks = (f, tasks) => {\r\n      let ft = [];\r\n      switch(f){\r\n         case \"all\": {\r\n            ft = tasks;\r\n            break;\r\n         }\r\n         case \"active\": {\r\n            ft = tasks.filter(item => !item.completed)\r\n            break;\r\n         }\r\n         case \"completed\": {\r\n            ft = tasks.filter(item => item.completed)\r\n            break;\r\n         }\r\n         default: {\r\n            ft = tasks\r\n         }\r\n      }\r\n      return ft;\r\n   }\r\n   const filteredTasks = filterTasks(filter, searchedTasks);\r\n\r\n   const taskCount = filteredTasks.length;\r\n   const taskList = filteredTasks.length > 0 ? filteredTasks.map(item => <Task {...item} key={item.id} />) : [];\r\n\r\n   const activeTasks = tasks.filter(item => !item.completed);\r\n   const completedTasks = tasks.length - activeTasks.length;\r\n   const allActive = tasks.length === activeTasks.length;\r\n   const allCompleted = tasks.length === completedTasks;\r\n\r\n   const savedTasks = tasks.filter(item => item.saved).length;\r\n   return (\r\n      <>\r\n         {\r\n            savedTasks > 0 &&\r\n            <Progress/>\r\n         }\r\n         <h3>\r\n            Task list\r\n            {\r\n               taskCount > 0 &&\r\n               <span> ({taskCount})</span>\r\n            }\r\n            <Button color=\"primary\" circle onClick={addTask} icon=\"plus\" title=\"Add task\" className={css.addButton}></Button>\r\n         </h3>\r\n         {\r\n            savedTasks > 1 &&\r\n            <div className={css.searchBox}>\r\n               <input\r\n                  type=\"text\"\r\n                  name=\"search\"\r\n                  value={search ? search : \"\"}\r\n                  placeholder=\"Search tasks…\"\r\n                  className=\"form-control border-box w-100\"\r\n                  onChange={(e) => setSearch(e.target.value)}\r\n                  onKeyUp={keyUp}\r\n                  title={\"Search/filter tasks by title. Click Esc to remove the filter.\"}\r\n               />\r\n               <FontAwesomeIcon icon=\"search\" color=\"silver\" className={css.searchButton} />\r\n            </div>\r\n         }\r\n         {\r\n            savedTasks > 1 && !allCompleted && !allActive &&\r\n            <Filters />\r\n         }\r\n         <div>\r\n            {\r\n               filteredTasks.length < 1 &&\r\n               <p><em>-- No tasks found --</em></p>\r\n            }\r\n            <ul className={css.taskList}>\r\n               {taskList}\r\n            </ul>\r\n         </div>\r\n      </>\r\n   )\r\n}\r\n\r\nexport default TaskList;","import React from 'react';\r\nimport TaskList from './components/TaskList/TaskList';\r\nimport { TodoContextProvider } from './context/todo.context';\r\nimport css from './App.module.scss';\r\n\r\nconst App = () => {\r\n   return (\r\n      <div className={css.app}>\r\n         <TodoContextProvider>\r\n            <TaskList />\r\n         </TodoContextProvider>\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}