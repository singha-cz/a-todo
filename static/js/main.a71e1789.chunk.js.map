{"version":3,"sources":["components/TaskList/TaskList.module.scss","components/Filters/Filters.module.scss","App.module.scss","components/Button/Button.js","context/todo.context.js","components/Task/Task.js","components/Filters/Filters.js","components/TaskList/TaskList.js","App.js","index.js","components/Button/Button.module.scss","components/Task/Task.module.scss"],"names":["module","exports","Button","props","str","onClick","disabled","outline","link","children","title","color","icon","circle","className","css","btn","charAt","toUpperCase","slice","btnOutline","btnLink","TodoContext","React","createContext","TodoContextProvider","useState","JSON","parse","localStorage","getItem","state","setState","filter","setFilter","useEffect","setItem","stringify","Provider","value","remove","taskId","item","id","complete","now","Date","newTasks","map","completed","addTask","e","newTask","created","save","saved","doFilter","f","library","add","faTimes","faCircle","faCheckCircle","Task","editable","setEditable","handlers","useContext","click","doSave","target","handleFocus","select","TaskName","taskNameInput","type","name","defaultValue","onBlur","onKeyUp","code","keyCode","keyUp","onFocus","autoFocus","timeCompleted","taskCompleted","toLocaleString","taskCreated","taskTitle","pointer","taskItem","size","Filters","filters","faPlus","TaskList","search","setSearch","tasks","filteredTasks","ft","filterTasks","toLowerCase","includes","taskCount","length","taskList","key","announcement","addButton","placeholder","onChange","App","app","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a71e1789.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"taskList\":\"TaskList_taskList__1QZ0i\",\"addButton\":\"TaskList_addButton__2K-0R\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filters\":\"Filters_filters__3OQvy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__3NoNF\"};","import React from 'react';\r\nimport css from './Button.module.scss';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nconst Button = (props) => {\r\n   const {\r\n      onClick\r\n      , disabled\r\n      , outline = false\r\n      , link\r\n      , children\r\n      , title = \"\"\r\n      , color = \"primary\"\r\n      , icon = false\r\n      , circle = false\r\n   } = props || {};\r\n\r\n   const ucfirst = (str) => str.charAt(0).toUpperCase() + str.slice(1);\r\n\r\n   return (\r\n      <button \r\n         onClick={onClick} \r\n         disabled={disabled} \r\n         title={title}\r\n         className={`${css.btn} ${color?css[`btn${ucfirst(color)}`]:\"\"} ${outline?css.btnOutline:\"\"}  ${link?css.btnLink:\"\"} ${circle?css.circle:\"\"}`}\r\n      >\r\n         {\r\n            icon &&\r\n            <FontAwesomeIcon icon={icon} />\r\n         }\r\n         {children}\r\n      </button>\r\n   );\r\n}\r\n\r\nexport default Button;","import React, {useState, useEffect} from 'react';\r\nconst TodoContext = React.createContext([{}, ()=>{}]);\r\n\r\nconst TodoContextProvider = (props) => {\r\n   const [state, setState] = useState(JSON.parse(localStorage.getItem('tasks')) || []);\r\n   const [filter, setFilter] = useState(\"all\");\r\n\r\n   useEffect(() => {\r\n      localStorage.setItem('tasks', JSON.stringify(state));\r\n   }, [state]);   \r\n\r\n   const remove = (taskId) => {\r\n      setState([...state.filter(item => item.id !== taskId)]);\r\n   }\r\n\r\n   const complete = (taskId) => {\r\n      const now = Date.now();      \r\n      const newTasks = state.map(item => {\r\n         if (item.id === taskId)\r\n            item.completed = item.completed ? null : now;\r\n         return item;\r\n      });\r\n      setState(newTasks);\r\n   }   \r\n\r\n   const addTask = (e) => {\r\n      const now = Date.now();       \r\n      const newTask = {\r\n         title: `New Task`\r\n         , created: now\r\n         , id: now\r\n      };\r\n      setState([...state, newTask]);\r\n      setFilter(\"all\")\r\n   }\r\n\r\n   const save = (taskId, title) => {\r\n      const newTasks = state.map(item => {\r\n         if (item.id === taskId) {\r\n            item.title = title || \"-- no-name task :/ --\";\r\n            item.saved = true;\r\n         }\r\n         return item;\r\n      });\r\n      setState(newTasks);\r\n   }\r\n\r\n   const doFilter = (f) => {\r\n      setFilter(f);\r\n   }\r\n\r\n   return (\r\n      <TodoContext.Provider value={[state, {\r\n         setState: setState, \r\n         remove: remove, \r\n         complete: complete, \r\n         addTask: addTask, \r\n         save: save,\r\n         doFilter: doFilter\r\n      }, filter\r\n      ]}>\r\n         {props.children}\r\n      </TodoContext.Provider>\r\n   );\r\n}\r\n\r\nexport { TodoContext, TodoContextProvider }\r\n","import React, { useState, useContext } from 'react';\r\nimport css from './Task.module.scss';\r\nimport Button from '../Button/Button';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\nimport { faCircle, faCheckCircle } from '@fortawesome/free-regular-svg-icons';\r\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\r\nimport { TodoContext } from '../../context/todo.context';\r\nlibrary.add(faTimes, faCircle, faCheckCircle);\r\n\r\nconst Task = (props) => {\r\n   const [editable, setEditable] = useState(false);\r\n   const handlers = useContext(TodoContext)[1];\r\n   const {\r\n      id\r\n      , completed = \"\"\r\n      , created = \"\"\r\n      , title = \"\"\r\n      , saved = false\r\n   } = props || {};\r\n\r\n   const {\r\n      remove = () => { }\r\n      , complete = () => { }\r\n      , save = () => { }\r\n   } = handlers || {};\r\n\r\n   const click = () => setEditable(!editable);\r\n\r\n   const doSave = (e, id) => {\r\n      setEditable(false);\r\n      save(id, e.target.value);\r\n   }\r\n\r\n   const keyUp = (e, id) => {\r\n      const code = e.keyCode;\r\n      if (code === 13) doSave(e, id);\r\n      if (code === 27) {\r\n         if (!saved) remove(id);\r\n            else setEditable(false);\r\n      }\r\n   }\r\n\r\n   const handleFocus = (e) => e.target.select();\r\n   \r\n   const TaskName = ({editable}) => {\r\n      const taskNameInput = <input\r\n         type=\"text\"\r\n         className=\"form-control\"\r\n         name=\"newTitle\"\r\n         defaultValue={title}\r\n         onBlur={(e) => doSave(e, id)}\r\n         onKeyUp={(e) => keyUp(e, id)}\r\n         onFocus={handleFocus}\r\n         autoFocus\r\n      />;\r\n\r\n      const timeCompleted = completed? new Date(completed): \"\";\r\n      const taskCompleted = completed ? `, Completed: ${timeCompleted.toLocaleString()}` : \"\";\r\n      const taskCreated = new Date(created);\r\n      const taskTitle = `Created: ${taskCreated.toLocaleString()} ${taskCompleted} - Click to edit `;\r\n      return  editable || !saved ? taskNameInput : <span\r\n         title={taskTitle}\r\n         onClick={click}\r\n         className={`${completed ? css.taskCompleted : \"\"} ${css.pointer}`}\r\n      >\r\n         {title}\r\n      </span>;\r\n   }\r\n\r\n   return (\r\n      <li className={css.taskItem}>\r\n         <span>\r\n            <Button link onClick={() => complete(id)} title={completed ? \"Mark incompleted\" : \"Mark completed\"}>\r\n               <FontAwesomeIcon color={completed ? \"#007022\" : \"\"} size=\"lg\" icon={[\"far\", completed ? \"check-circle\" : \"circle\"]} />\r\n            </Button> <TaskName editable={editable} />\r\n         </span> <span className={css.remove}>\r\n            <Button title=\"Delete\" link onClick={() => remove(id)} icon={\"times\"} />\r\n         </span>\r\n      </li>\r\n   );\r\n}\r\n\r\nexport default Task;","import React, {useContext} from 'react';\r\nimport { TodoContext } from '../../context/todo.context';\r\nimport Button from '../Button/Button';\r\nimport css from './Filters.module.scss';\r\n\r\nconst Filters = () => {\r\n    const [tasks, handlers, filter] = useContext(TodoContext);\r\n    const {doFilter} = handlers || {};\r\n    return <div className={css.filters}>\r\n        <Button color={filter===\"all\"?\"dark\":\"secondary\"} onClick={()=>doFilter(\"all\")}>\r\n            All\r\n        </Button> <Button color={filter===\"active\"?\"dark\":\"secondary\"} onClick={()=>doFilter(\"active\")}>\r\n            Active\r\n        </Button> <Button color={filter===\"completed\"?\"dark\":\"secondary\"} onClick={()=>doFilter(\"completed\")}>\r\n            Completed\r\n        </Button>\r\n    </div>\r\n}\r\n\r\nexport default Filters;","import React, { useState, useContext } from 'react';\r\nimport Task from '../Task/Task';\r\nimport Filters from '../../components/Filters/Filters';\r\nimport { TodoContext } from '../../context/todo.context';\r\nimport Button from '../../components/Button/Button';\r\nimport css from './TaskList.module.scss';\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\r\nlibrary.add(faPlus);\r\n\r\nconst TaskList = () => {\r\n   const [search, setSearch] = useState();\r\n   const [tasks, handlers, filter] = useContext(TodoContext);\r\n   const {\r\n      addTask\r\n   } = handlers || {};\r\n\r\n   const keyUp = (e) => {\r\n      if (e.keyCode === 27) setSearch(\"\");\r\n   }\r\n\r\n   const searchedTasks = search ? tasks.filter(item => {\r\n      return item.title.toLowerCase().includes(search.toLowerCase())\r\n   }) : tasks;\r\n\r\n\r\n   const filterTasks = (f, tasks) => {\r\n      let ft = [];\r\n      switch(f){\r\n         case \"all\": {\r\n            ft = tasks;\r\n            break;\r\n         }\r\n         case \"active\": {\r\n            ft = tasks.filter(item => !item.completed)\r\n            break;\r\n         }\r\n         case \"completed\": {\r\n            ft = tasks.filter(item => item.completed)\r\n            break;\r\n         }\r\n         default: {\r\n            ft = tasks\r\n         }\r\n      }\r\n      return ft;\r\n   }\r\n   const filteredTasks = filterTasks(filter, searchedTasks);\r\n\r\n   const taskCount = filteredTasks.length;\r\n   const taskList = filteredTasks.length > 0 ? filteredTasks.map(item => <Task {...item} key={item.id} />) : [];\r\n\r\n   const unfinished = tasks.filter(item => !item.completed);\r\n   // const announcement = unfinished.length > 0 ? `Remaining tasks (${unfinished.length}):` : <>All done, <strong>congrats!</strong></>;\r\n   const announcement = unfinished.length > 0 ? \"\": <>All done, <strong>congrats!</strong></>;\r\n   return (\r\n      <>\r\n         <h3>\r\n            Task list\r\n            {\r\n               taskCount > 0 &&\r\n               <span> ({taskCount})</span>\r\n            }\r\n            <span className={css.addButton}>\r\n               <Button color=\"primary\" circle onClick={addTask} icon=\"plus\" title=\"Add task\"></Button>\r\n            </span>\r\n         </h3>\r\n         {\r\n            tasks.length > 0 &&\r\n            <input\r\n               type=\"text\"\r\n               name=\"search\"\r\n               value={search ? search : \"\"}\r\n               placeholder=\"Search tasks…\"\r\n               className=\"form-control\"\r\n               onChange={(e) => setSearch(e.target.value)}\r\n               onKeyUp={keyUp}\r\n               title={\"Search/filter tasks by title. Click Esc to remove the filter.\"}\r\n            />\r\n         }\r\n         {\r\n            tasks.filter(item => item.saved).length > 0 &&\r\n            <Filters />\r\n         }\r\n         <p>\r\n            {\r\n               taskCount > 0 &&\r\n               announcement\r\n            }\r\n         </p>\r\n         <div>\r\n            {\r\n               filteredTasks.length < 1 &&\r\n               <p><em>-- No tasks found --</em></p>\r\n            }\r\n            <ul className={css.taskList}>\r\n               {taskList}\r\n            </ul>\r\n         </div>\r\n      </>\r\n   )\r\n}\r\n\r\nexport default TaskList;","import React from 'react';\nimport TaskList from './components/TaskList/TaskList';\nimport { TodoContextProvider } from './context/todo.context';\nimport css from './App.module.scss';\n\nconst App = () => {\n   return (\n      <div className={css.app}>\n         <TodoContextProvider>\n            <TaskList />\n         </TodoContextProvider>\n      </div>\n   );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"Button_btn__1PDgW\",\"btnPrimary\":\"Button_btnPrimary__1cusH\",\"btnDark\":\"Button_btnDark__2GTj5\",\"btnOutline\":\"Button_btnOutline__1B0Zy\",\"btnLink\":\"Button_btnLink__xQmtj\",\"circle\":\"Button_circle__25JQl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"taskItem\":\"Task_taskItem__2tj_t\",\"remove\":\"Task_remove__5DzNr\",\"taskCompleted\":\"Task_taskCompleted__3bA8R\",\"pointer\":\"Task_pointer__19i2T\",\"highlight\":\"Task_highlight__1jEt-\"};"],"sourceRoot":""}