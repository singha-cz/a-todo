{"version":3,"sources":["components/TaskList/TaskList.module.scss","components/Button/Button.module.scss","components/Filters/Filters.module.scss","components/Task/Task.module.scss","components/EditableOnClick/EditableOnClick.module.scss","components/Progress/Progress.module.scss","components/ToDoLists/ToDoLists.module.scss","components/ButtonGroup/ButtonGroup.module.scss","App.module.scss","context/todo.context.js","components/Button/Button.js","components/EditableOnClick/EditableOnClick.js","components/Task/Task.js","components/ButtonGroup/ButtonGroup.js","components/Filters/Filters.js","components/Progress/Progress.js","components/TaskList/TaskList.js","components/ToDoLists/ToDoLists.js","App.js","index.js"],"names":["module","exports","TodoContext","React","createContext","TodoContextProvider","props","useState","id","res","JSON","parse","localStorage","getItem","getLocalStorage","toDoLists","setToDoLists","getToDoListIndex","findIndex","item","useEffect","setItem","stringify","Provider","value","remove","taskId","toDoListId","toDoListIndex","newTasks","tasks","filter","complete","now","Date","map","completed","addTask","newTask","title","created","find","push","save","saved","addToDoList","e","newTaskList","target","removeToDoList","updateToDoListTitle","children","Button","str","onClick","disabled","outline","link","color","icon","circle","active","className","css","btn","charAt","toUpperCase","slice","btnOutline","btnLink","activeButton","EditableOnClick","editable","handlers","doSave","setEditable","inputElement","type","name","defaultValue","onBlur","onKeyUp","code","keyCode","keyUp","onFocus","select","autoFocus","timeCompleted","taskCompleted","toLocaleString","taskCreated","taskTitle","pointer","library","add","faTimes","faCircle","faCheckCircle","Task","useContext","taskItem","primary","size","ButtonGroup","buttonGroup","Filters","Badge","filterBadge","style","backgroundColor","filters","doFilter","activeTasks","completedTasks","length","filterTextBadge","Progress","percentage","progressStyle","width","undefined","maximumFractionDigits","progressBarContainer","progressBar","faPlus","faSearch","faSpinner","TaskList","search","setSearch","setFilter","toDoList","filteredTasks","f","ft","filterTasks","toLowerCase","includes","taskCount","taskList","key","allActive","every","allCompleted","savedTasks","toDoListModule","closeButton","toDoListHeader","addButton","searchBox","placeholder","onChange","searchButton","Lists","ToDoLists","App","app","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3384be6f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"toDoListModule\":\"TaskList_toDoListModule__2N2pZ\",\"taskList\":\"TaskList_taskList__2tkvE\",\"toDoListHeader\":\"TaskList_toDoListHeader__aSy2J\",\"addButton\":\"TaskList_addButton__3Loh7\",\"searchButton\":\"TaskList_searchButton__1Gmad\",\"searchBox\":\"TaskList_searchBox__3i3dF\",\"closeButton\":\"TaskList_closeButton__3zFCU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"Button_btn__1qODl\",\"btnPrimary\":\"Button_btnPrimary__JX4ld\",\"btnSecondary\":\"Button_btnSecondary__2hW3p\",\"btnDark\":\"Button_btnDark__1v_PM\",\"btnOutline\":\"Button_btnOutline__1fhyF\",\"btnLink\":\"Button_btnLink__1tfto\",\"circle\":\"Button_circle__FDTgb\",\"activeButton\":\"Button_activeButton__1C0A9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filters\":\"Filters_filters__3pO4f\",\"filterBadge\":\"Filters_filterBadge__3Lt8z\",\"filterTextBadge\":\"Filters_filterTextBadge__2ALne\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"primary\":\"#045bbe\",\"taskItem\":\"Task_taskItem__2yqp7\",\"remove\":\"Task_remove__1DEoB\",\"taskCompleted\":\"Task_taskCompleted__3wkCO\",\"pointer\":\"Task_pointer__2cEif\",\"highlight\":\"Task_highlight__lgmZq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"primary\":\"#045bbe\",\"taskCompleted\":\"EditableOnClick_taskCompleted__2ePk0\",\"pointer\":\"EditableOnClick_pointer__hT0rj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"progressBarContainer\":\"Progress_progressBarContainer__1ZEpK\",\"progressBar\":\"Progress_progressBar__2hvSJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"toDoLists\":\"ToDoLists_toDoLists__2XzL3\",\"addToDoList\":\"ToDoLists_addToDoList__2THlu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonGroup\":\"ButtonGroup_buttonGroup__1xJqc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__1jdVP\"};","import React, {useState, useEffect} from 'react';\r\nconst TodoContext = React.createContext([{}, ()=>{}]);\r\n\r\n\r\nconst getLocalStorage = (id) => {\r\n   let res = null;\r\n   if (id)\r\n      res = JSON.parse(localStorage.getItem(id));\r\n   return res;\r\n}\r\n\r\nconst TodoContextProvider = (props) => {\r\n    const [toDoLists, setToDoLists] = useState(getLocalStorage('toDoLists') || []);\r\n\r\n   // useEffect(() => {\r\n   //    // let getPosts = new Promise((resolve, reject) => {\r\n   //    //    fetch('https://jsonplaceholder.typicode.com/posts')\r\n   //    //    .then(response => response.json())\r\n   //    //    .then(json => resolve(json))\r\n   //    //    .catch(error => reject(error))\r\n   //    // })\r\n\r\n   //    // getPosts.then(x => {\r\n   //    //    setPosts(x);\r\n   //    //    console.log(x);\r\n   //    // })\r\n\r\n   //    localStorage.setItem('tasks', JSON.stringify(tasks));\r\n   // }, [tasks]);   \r\n\r\n \r\n\r\n   const getToDoListIndex = (id) => {\r\n      return toDoLists.findIndex(item => item.id === id);\r\n   }\r\n\r\n   const removeToDoList = (toDoListId) => {\r\n      setToDoLists([...toDoLists.filter(item => item.id !== toDoListId)]);\r\n   }\r\n   \r\n   const remove = (taskId, toDoListId) => {\r\n      const toDoListIndex = getToDoListIndex(toDoListId);\r\n      const newTasks = toDoLists[toDoListIndex].tasks.filter(item => item.id !== taskId);\r\n      toDoLists[toDoListIndex].tasks = newTasks;\r\n      setToDoLists([...toDoLists]);\r\n\r\n   }\r\n\r\n   const complete = (taskId, toDoListId) => {\r\n      const now = Date.now();      \r\n      const toDoListIndex = getToDoListIndex(toDoListId);  \r\n      const newTasks = toDoLists[toDoListIndex].tasks.map(item => {\r\n         if (item.id === taskId)\r\n            item.completed = item.completed ? null : now;\r\n         return item;\r\n      });\r\n\r\n      // const allActive = newTasks.every(item => !item.completed);\r\n      // const allCompleted = newTasks.every(item => item.completed);\r\n\r\n      toDoLists[toDoListIndex].tasks = newTasks;\r\n      setToDoLists([...toDoLists]);      \r\n      // if (allActive || allCompleted) setFilter(\"all\");\r\n   }   \r\n\r\n   const addToDoList = (e) => {\r\n      const now = Date.now(); \r\n      const newTaskList = {\r\n         title: e && e.target.value? e.target.value: \"New to-do list\"\r\n         , created: now\r\n         , id: now\r\n         , tasks: []\r\n      };     \r\n      setToDoLists([...toDoLists, newTaskList])\r\n   }\r\n\r\n   const addTask = (id) => {\r\n      const now = Date.now();       \r\n      const newTask = {\r\n         title: `New Task`\r\n         , created: now\r\n         , id: now\r\n      };\r\n      const toDoList = toDoLists.find(item => item.id === id);\r\n      toDoList.tasks.push(newTask);\r\n      setToDoLists([...toDoLists]);\r\n      // setFilter(\"all\")\r\n   }\r\n   \r\n   const save = (taskId, title, toDoListId) => {\r\n      const toDoListIndex = getToDoListIndex(toDoListId);\r\n      const newTasks = toDoLists[toDoListIndex].tasks.map(item => {\r\n         if (item.id === taskId) {\r\n            item.title = title || \"-- no-name task :/ --\";\r\n            item.saved = true;\r\n         }\r\n         return item;\r\n      });\r\n      toDoLists[toDoListIndex].tasks = newTasks;\r\n      setToDoLists([...toDoLists]);\r\n      // setTasks(newTasks);\r\n   }\r\n\r\n   const updateToDoListTitle = (id, title) => {\r\n      const toDoListIndex = getToDoListIndex(id); \r\n      toDoLists[toDoListIndex].title = title;\r\n      toDoLists[toDoListIndex].saved = true;\r\n      setToDoLists([...toDoLists]);           \r\n   }\r\n\r\n   useEffect(() => {\r\n      //if (toDoLists.length === 0) addToDoList();\r\n       localStorage.setItem('toDoLists', JSON.stringify(toDoLists));\r\n   }, [toDoLists]);      \r\n\r\n   // const doFilter = (f) => {\r\n   //    setFilter(f);\r\n   // }\r\n\r\n   return (\r\n      <TodoContext.Provider value={\r\n            [\r\n               toDoLists\r\n               , {\r\n                  // setState: setTasks, \r\n                  remove: remove, \r\n                  complete: complete, \r\n                  addTask: addTask, \r\n                  save: save,\r\n                  addToDoList: addToDoList,\r\n                  removeToDoList: removeToDoList,\r\n                  updateToDoListTitle: updateToDoListTitle\r\n               }\r\n            ]\r\n      }>\r\n      {/* <TodoContext.Provider value={[\r\n         tasks\r\n         , {\r\n            setState: setTasks, \r\n            remove: remove, \r\n            complete: complete, \r\n            addTask: addTask, \r\n            save: save,\r\n            doFilter: doFilter,\r\n            addToDoList: addToDoList,\r\n            removeToDoList: removeToDoList\r\n         }\r\n         , filter\r\n         // , posts\r\n         , toDoLists\r\n      ]}> */}\r\n         {props.children}\r\n      </TodoContext.Provider>\r\n   );\r\n}\r\n\r\nexport { TodoContext, TodoContextProvider }\r\n","import React from 'react';\r\nimport css from './Button.module.scss';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nconst Button = (props) => {\r\n   const {\r\n      onClick\r\n      , disabled\r\n      , outline = false\r\n      , link\r\n      , children\r\n      , title = \"\"\r\n      , color = \"primary\"\r\n      , icon = false\r\n      , circle = false\r\n      , active = false\r\n      , className = \"\"\r\n   } = props || {};\r\n\r\n   const ucfirst = (str) => str.charAt(0).toUpperCase() + str.slice(1);\r\n\r\n   return (\r\n      <button \r\n         onClick={onClick} \r\n         disabled={disabled} \r\n         title={title}\r\n         className={`\r\n            ${css.btn} \r\n            ${color?css[`btn${ucfirst(color)}`]:\"\"} \r\n            ${outline?css.btnOutline:\"\"}  \r\n            ${link?css.btnLink:\"\"} \r\n            ${circle?css.circle:\"\"}\r\n            ${className}\r\n            ${active?css.activeButton:\"\"}\r\n         `}\r\n      >\r\n         {\r\n            icon &&\r\n            <FontAwesomeIcon icon={icon} />\r\n         }\r\n         {children}\r\n      </button>\r\n   );\r\n}\r\n\r\nexport default Button;","import React from 'react';\r\nimport css from './EditableOnClick.module.scss';\r\n\r\nconst EditableOnClick = (props) => {\r\n    const {\r\n        id\r\n        , completed = \"\"\r\n        , created = \"\"\r\n        , title = \"\"\r\n        , saved = false\r\n        , editable = false\r\n        , handlers = {}\r\n     } = props || {};\r\n\r\n     const {\r\n        doSave = () => {}, \r\n        remove = () => {}, \r\n        setEditable = () => {}\r\n     } = handlers;\r\n\r\n     const click = () => setEditable(!editable);\r\n\r\n     const handleFocus = (e) => e.target.select();\r\n\r\n     const keyUp = (e, id) => {\r\n        const code = e.keyCode;\r\n        if (code === 13) doSave(e, id);\r\n        if (code === 27) {\r\n           if (!saved) remove(id);\r\n              else setEditable(false);\r\n        }\r\n     }\r\n\r\n    const inputElement = <input\r\n       type=\"text\"\r\n       className=\"form-control\"\r\n       name=\"newTitle\"\r\n       defaultValue={title}\r\n       onBlur={(e) => doSave(e, id)}\r\n       onKeyUp={(e) => keyUp(e, id)}\r\n       onFocus={handleFocus}\r\n       autoFocus\r\n    />;\r\n\r\n    const timeCompleted = completed? new Date(completed): \"\";\r\n    const taskCompleted = completed ? `, Completed: ${timeCompleted.toLocaleString()}` : \"\";\r\n    const taskCreated = new Date(created);\r\n    const taskTitle = `Created: ${taskCreated.toLocaleString()} ${taskCompleted} - Click to edit `;\r\n    return  editable || !saved ? inputElement : <span\r\n       title={taskTitle}\r\n       onClick={click}\r\n       className={`${completed ? css.taskCompleted : \"\"} ${css.pointer}`}\r\n    >\r\n       {title}\r\n    </span>;\r\n }\r\n\r\n export default EditableOnClick","import React, { useState, useContext } from 'react';\r\nimport css from './Task.module.scss';\r\nimport Button from '../Button/Button';\r\nimport TaskName from '../EditableOnClick/EditableOnClick';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\nimport { faCircle, faCheckCircle } from '@fortawesome/free-regular-svg-icons';\r\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\r\nimport { TodoContext } from '../../context/todo.context';\r\nlibrary.add(faTimes, faCircle, faCheckCircle);\r\n\r\nconst Task = (props) => {\r\n   const [editable, setEditable] = useState(false);\r\n   const handlers = useContext(TodoContext)[1];\r\n   const {\r\n      id\r\n      , completed = \"\"\r\n      , toDoListId = null\r\n   } = props || {};\r\n\r\n   const {\r\n      remove = () => { }\r\n      , complete = () => { }\r\n      , save = () => { }\r\n   } = handlers || {};\r\n\r\n   const doSave = (e, id) => {\r\n      setEditable(false);\r\n      save(id, e.target.value, toDoListId);\r\n   }\r\n\r\n   return (\r\n      <li className={css.taskItem}>\r\n         <span>\r\n            <Button link onClick={() => complete(id, toDoListId)} title={completed ? \"Mark incompleted\" : \"Mark completed\"}>\r\n               <FontAwesomeIcon color={completed ? css.primary : \"\"} size=\"lg\" icon={[\"far\", completed ? \"check-circle\" : \"circle\"]} />\r\n            </Button> <TaskName editable={editable} handlers={{remove: remove, doSave: doSave, setEditable: setEditable}} {...props} />\r\n         </span> <span className={css.remove}>\r\n            <Button title=\"Delete\" link onClick={() => remove(id, toDoListId)} icon={\"times\"} />\r\n         </span>\r\n      </li>\r\n   );\r\n}\r\n\r\nexport default Task;","import React from 'react';\r\nimport css from './ButtonGroup.module.scss';\r\n\r\nconst ButtonGroup = (props) => {\r\n   return <div className={css.buttonGroup}>\r\n      {props.children}\r\n   </div>\r\n}\r\n\r\nexport default ButtonGroup;","import React, { useContext } from 'react';\r\nimport { TodoContext } from '../../context/todo.context';\r\nimport Button from '../Button/Button';\r\nimport ButtonGroup from '../ButtonGroup/ButtonGroup';\r\nimport css from './Filters.module.scss';\r\n\r\n\r\nconst Filters = (props) => {\r\n   const Badge = ({ value, color }) => {\r\n      return (<span className={css.filterBadge} style={{ backgroundColor: color ? color : \"\" }}>{value}</span>)\r\n   }\r\n   const toDoLists = useContext(TodoContext)[0];\r\n   const [filter, doFilter] = props.filters || {};\r\n   const tasks = toDoLists.find(item => item.id === props.id).tasks;\r\n   const activeTasks = tasks.filter(item => !item.completed);\r\n   const completedTasks = tasks.length - activeTasks.length;\r\n\r\n   return <div className={css.filters}>\r\n      <ButtonGroup>\r\n         <Button \r\n            active={filter === \"ALL\"} \r\n            outline \r\n            color={filter === \"ALL\" ? \"dark\" : \"secondary\"} \r\n            onClick={() => doFilter(\"ALL\")}\r\n         >\r\n            All tasks <span className={css.filterTextBadge}>({tasks.length})</span>\r\n            </Button><Button \r\n            active={filter === \"ACTIVE\"} \r\n            outline \r\n            color={filter === \"ACTIVE\" ? \"dark\" : \"secondary\"} \r\n            onClick={() => doFilter(\"ACTIVE\")}\r\n         >\r\n            Active <Badge \r\n            value={activeTasks.length} />\r\n         </Button><Button \r\n            active={filter === \"COMPLETED\"} \r\n            outline \r\n            color={filter === \"COMPLETED\" ? \"dark\" : \"secondary\"} \r\n            onClick={() => doFilter(\"COMPLETED\")}\r\n         >\r\n            Completed <span className={css.filterTextBadge}>({completedTasks})</span>\r\n         </Button>\r\n      </ButtonGroup>\r\n   </div>\r\n}\r\n\r\nexport default Filters;","import React, { useContext } from 'react';\r\nimport css from './Progress.module.scss';\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\nimport { faCircle, faCheckCircle } from '@fortawesome/free-regular-svg-icons';\r\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\r\nimport { TodoContext } from '../../context/todo.context';\r\nlibrary.add(faTimes, faCircle, faCheckCircle);\r\n\r\nconst Progress = (props) => {\r\n   const toDoLists = useContext(TodoContext)[0];\r\n   if (toDoLists.length > 0){\r\n      const tasks = toDoLists.find(item => item.id === props.id).tasks;\r\n      const completed = tasks.filter(item => item.completed);\r\n      const percentage = completed.length * 100 / tasks.length;\r\n      const progressStyle = {\r\n         width: `${percentage}%`\r\n         , backgroundColor: `hsl(${percentage * 1}, 60%, 45%)`\r\n      }\r\n   \r\n      return (\r\n         <div className=\"text-center\">\r\n            <h5 className=\"m-0 text-muted\">{percentage.toLocaleString(undefined, {maximumFractionDigits: 1})} % completed</h5>\r\n            <div className={css.progressBarContainer}>\r\n               <div className={css.progressBar} style={progressStyle} ></div>\r\n            </div>\r\n         </div>\r\n      );\r\n   }\r\n   else return \"\";\r\n}\r\n\r\nexport default Progress;","import React, { useState, useContext } from 'react';\r\nimport Task from '../Task/Task';\r\nimport Filters from '../../components/Filters/Filters';\r\nimport { TodoContext } from '../../context/todo.context';\r\nimport Button from '../../components/Button/Button';\r\nimport Progress from '../../components/Progress/Progress';\r\nimport ToDoListTitle from '../EditableOnClick/EditableOnClick';\r\nimport css from './TaskList.module.scss';\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\nimport { faPlus, faSearch, faSpinner } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nlibrary.add(faPlus, faSearch, faSpinner);\r\n\r\nconst TaskList = (props) => {\r\n   const [search, setSearch] = useState();\r\n   const [editable, setEditable] = useState();\r\n   const [filter, setFilter] = useState('ALL');\r\n   const [toDoLists, handlers] = useContext(TodoContext);\r\n\r\n   const toDoList = toDoLists.find(item => item.id === props.id);\r\n   const tasks = toDoList.tasks;\r\n   const {\r\n      addTask,\r\n      updateToDoListTitle\r\n   } = handlers || {};\r\n\r\n   const keyUp = (e) => {\r\n      if (e.keyCode === 27) setSearch(\"\");\r\n   }\r\n\r\n   const doFilter = (f) => {\r\n      setFilter(f);\r\n   }\r\n\r\n   const doSave = (e) => {\r\n      setEditable(false);\r\n      updateToDoListTitle(props.id, e.target.value);\r\n   }   \r\n\r\n   const searchedTasks = search ? tasks.filter(item => {\r\n      return item.title.toLowerCase().includes(search.toLowerCase())\r\n   }) : tasks;\r\n\r\n\r\n   const filterTasks = (f, tasks) => {\r\n      let ft = [];\r\n      switch(f){\r\n         case \"ALL\": {\r\n            ft = tasks;\r\n            break;\r\n         }\r\n         case \"ACTIVE\": {\r\n            ft = tasks.filter(item => !item.completed)\r\n            break;\r\n         }\r\n         case \"COMPLETED\": {\r\n            ft = tasks.filter(item => item.completed)\r\n            break;\r\n         }\r\n         default: {\r\n            ft = tasks?tasks: []\r\n         }\r\n      }\r\n      return ft;\r\n   }\r\n   const filteredTasks = filterTasks(filter, searchedTasks);\r\n\r\n   const taskCount = filteredTasks.length;\r\n   const taskList = filteredTasks.length > 0 ? filteredTasks.map(item => <Task {...item} key={item.id} toDoListId={props.id} />) : [];\r\n\r\n   const allActive = tasks.every(item => !item.completed);\r\n   const allCompleted = tasks.every(item => item.completed);   \r\n\r\n   const savedTasks = tasks.filter(item => item.saved).length;\r\n\r\n   return (\r\n      <section className={css.toDoListModule}>\r\n         <Button color=\"link\" icon=\"times\" className={css.closeButton} onClick={() => handlers.removeToDoList(props.id)} />\r\n         {\r\n            savedTasks > 0 &&\r\n            <Progress id={props.id} />\r\n         }\r\n         <header className={css.toDoListHeader}>\r\n            <h3>\r\n               <ToDoListTitle editable={editable} handlers={{doSave: doSave, setEditable: setEditable}} {...toDoList} />\r\n               {\r\n                  taskCount > 0 && !editable &&\r\n                  <span> ({taskCount})</span>\r\n               }\r\n            </h3>\r\n            <Button color=\"primary\" circle onClick={() => addTask(props.id)} icon=\"plus\" title=\"Add task\" className={css.addButton}></Button>\r\n         </header>\r\n         {\r\n            savedTasks > 1 &&\r\n            <div className={css.searchBox}>\r\n               <input\r\n                  type=\"text\"\r\n                  name=\"search\"\r\n                  value={search ? search : \"\"}\r\n                  placeholder=\"Search tasks…\"\r\n                  className=\"form-control border-box w-100\"\r\n                  onChange={(e) => setSearch(e.target.value)}\r\n                  onKeyUp={keyUp}\r\n                  title={\"Search/filter tasks by title. Click Esc to remove the filter.\"}\r\n               />\r\n               <FontAwesomeIcon icon=\"search\" color=\"silver\" className={css.searchButton} />\r\n            </div>\r\n         }\r\n         {\r\n            savedTasks > 1 && !allCompleted && !allActive &&\r\n            <Filters id={props.id} filters={[filter, doFilter]} />\r\n         }\r\n         <div>\r\n            {\r\n               filteredTasks.length < 1 &&\r\n               <p><em>-- No tasks found --</em></p>\r\n            }\r\n            <ul className={css.taskList}>\r\n               {taskList}\r\n            </ul>\r\n         </div>\r\n      </section>\r\n   )\r\n}\r\n\r\nexport default TaskList;","import React, { useContext } from 'react';\r\nimport TaskList from '../TaskList/TaskList';\r\nimport Button from '../Button/Button';\r\nimport { TodoContext } from '../../context/todo.context';\r\nimport css from './ToDoLists.module.scss';\r\n\r\nconst Lists = () => {\r\n   const toDoLists = useContext(TodoContext)[0];\r\n   return toDoLists.map(item => <TaskList key={item.id} id={item.id} />)\r\n}\r\n\r\nconst ToDoLists = () => {\r\n   const [toDoLists, handlers] = useContext(TodoContext);\r\n   return <>\r\n      <div className={css.addToDoList}>\r\n         <Button color=\"primary\" circle icon=\"plus\" onClick={handlers.addToDoList} title=\"Add new todo list\" />\r\n      </div>\r\n      <div className={css.toDoLists}>\r\n         <Lists />\r\n         {\r\n            toDoLists.length === 0 && \r\n            <div className=\"text-center mx-auto\">\r\n               <em>-- No to-do lists yet --</em>\r\n               <p>\r\n                  <Button color=\"primary\" onClick={handlers.addToDoList}> Create a new one</Button>\r\n               </p>\r\n            </div>\r\n            \r\n         }\r\n      </div>\r\n   </>\r\n}\r\n\r\nexport default ToDoLists;\r\n","import React from 'react';\r\nimport { TodoContextProvider } from './context/todo.context';\r\nimport ToDoLists from './components/ToDoLists/ToDoLists';\r\nimport css from './App.module.scss';\r\n\r\nconst App = () => {\r\n   return (\r\n      <div className={css.app}>\r\n         <TodoContextProvider>\r\n            <ToDoLists />\r\n         </TodoContextProvider>\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}