{"version":3,"sources":["components/TaskList/TaskList.module.scss","components/Button/Button.module.scss","components/Filters/Filters.module.scss","components/Task/Task.module.scss","components/EditableOnClick/EditableOnClick.module.scss","components/Progress/Progress.module.scss","components/ToDoLists/ToDoLists.module.scss","components/ButtonGroup/ButtonGroup.module.scss","components/PopupMenu/PopupMenu.module.scss","App.module.scss","context/todo.context.js","components/Button/Button.js","components/EditableOnClick/EditableOnClick.js","components/Task/Task.js","components/ButtonGroup/ButtonGroup.js","components/Filters/Filters.js","components/Progress/Progress.js","components/PopupMenu/PopupMenu.js","components/TaskList/TaskList.js","components/ToDoLists/ToDoLists.js","App.js","index.js"],"names":["module","exports","TodoContext","React","createContext","TodoContextProvider","props","useState","id","res","JSON","parse","localStorage","getItem","getLocalStorage","toDoLists","setToDoLists","getToDoListIndex","findIndex","item","handleImport","e","now","Date","file","target","files","reader","FileReader","readAsText","onload","evt","toDoListIndex","newToDoLists","newToDoList","result","created","console","log","err","error","name","onerror","useEffect","setItem","stringify","Provider","value","remove","taskId","toDoListId","newTasks","tasks","filter","complete","map","completed","addTask","newTask","title","find","push","save","saved","addToDoList","newTaskList","removeToDoList","updateToDoListTitle","exportJSON","data","filename","newFileName","replace","toLowerCase","content","pom","document","createElement","setAttribute","encodeURIComponent","createEvent","event","initEvent","dispatchEvent","click","importJSON","fileSelector","addEventListener","children","Button","str","onClick","disabled","outline","link","color","icon","circle","active","className","css","btn","charAt","toUpperCase","slice","btnOutline","btnLink","activeButton","EditableOnClick","editable","handlers","doSave","setEditable","inputElement","type","defaultValue","onBlur","onKeyUp","code","keyCode","keyUp","onFocus","select","autoFocus","timeCompleted","taskCompleted","toLocaleString","taskCreated","taskTitle","pointer","library","add","faTimes","faCircle","faCheckCircle","Task","useContext","taskItem","primary","size","ButtonGroup","buttonGroup","Filters","Badge","filterBadge","style","backgroundColor","filters","doFilter","activeTasks","completedTasks","length","filterTextBadge","Progress","percentage","progressStyle","width","undefined","maximumFractionDigits","progressBarContainer","progressBar","PopupMenu","toDoList","items","label","action","hidden","key","popupMenu","faPlus","faSearch","faSpinner","faEllipsisV","TaskList","search","setSearch","setFilter","menu","setMenu","filteredTasks","f","ft","filterTasks","includes","taskCount","taskList","allActive","every","allCompleted","savedTasks","toDoListModule","moreButton","closeButton","toDoListHeader","addButton","searchBox","placeholder","onChange","searchButton","Lists","ToDoLists","App","app","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.e3cd3770.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"toDoListModule\":\"TaskList_toDoListModule__2N2pZ\",\"taskList\":\"TaskList_taskList__2tkvE\",\"toDoListHeader\":\"TaskList_toDoListHeader__aSy2J\",\"addButton\":\"TaskList_addButton__3Loh7\",\"searchButton\":\"TaskList_searchButton__1Gmad\",\"searchBox\":\"TaskList_searchBox__3i3dF\",\"closeButton\":\"TaskList_closeButton__3zFCU\",\"moreButton\":\"TaskList_moreButton__l9VO_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"Button_btn__1qODl\",\"btnPrimary\":\"Button_btnPrimary__JX4ld\",\"btnSecondary\":\"Button_btnSecondary__2hW3p\",\"btnDark\":\"Button_btnDark__1v_PM\",\"btnOutline\":\"Button_btnOutline__1fhyF\",\"btnLink\":\"Button_btnLink__1tfto\",\"circle\":\"Button_circle__FDTgb\",\"activeButton\":\"Button_activeButton__1C0A9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filters\":\"Filters_filters__3pO4f\",\"filterBadge\":\"Filters_filterBadge__3Lt8z\",\"filterTextBadge\":\"Filters_filterTextBadge__2ALne\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"primary\":\"#045bbe\",\"taskItem\":\"Task_taskItem__2yqp7\",\"remove\":\"Task_remove__1DEoB\",\"taskCompleted\":\"Task_taskCompleted__3wkCO\",\"pointer\":\"Task_pointer__2cEif\",\"highlight\":\"Task_highlight__lgmZq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"primary\":\"#045bbe\",\"taskCompleted\":\"EditableOnClick_taskCompleted__2ePk0\",\"pointer\":\"EditableOnClick_pointer__hT0rj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"progressBarContainer\":\"Progress_progressBarContainer__1ZEpK\",\"progressBar\":\"Progress_progressBar__2hvSJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"toDoLists\":\"ToDoLists_toDoLists__2XzL3\",\"addToDoList\":\"ToDoLists_addToDoList__2THlu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonGroup\":\"ButtonGroup_buttonGroup__1xJqc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"popupMenu\":\"PopupMenu_popupMenu__2B3mD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__1jdVP\"};","import React, {useState, useEffect} from 'react';\r\nconst TodoContext = React.createContext([{}, ()=>{}]);\r\n\r\n\r\nconst getLocalStorage = (id) => {\r\n   let res = null;\r\n   if (id)\r\n      res = JSON.parse(localStorage.getItem(id));\r\n   return res;\r\n}\r\n\r\nconst TodoContextProvider = (props) => {\r\n    const [toDoLists, setToDoLists] = useState(getLocalStorage('toDoLists') || []);\r\n\r\n   // useEffect(() => {\r\n   //    // let getPosts = new Promise((resolve, reject) => {\r\n   //    //    fetch('https://jsonplaceholder.typicode.com/posts')\r\n   //    //    .then(response => response.json())\r\n   //    //    .then(json => resolve(json))\r\n   //    //    .catch(error => reject(error))\r\n   //    // })\r\n\r\n   //    // getPosts.then(x => {\r\n   //    //    setPosts(x);\r\n   //    //    console.log(x);\r\n   //    // })\r\n\r\n   //    localStorage.setItem('tasks', JSON.stringify(tasks));\r\n   // }, [tasks]);   \r\n\r\n \r\n\r\n   const getToDoListIndex = (id) => {\r\n      return toDoLists.findIndex(item => item.id === id);\r\n   }\r\n\r\n   const removeToDoList = (toDoListId) => {\r\n      setToDoLists([...toDoLists.filter(item => item.id !== toDoListId)]);\r\n   }\r\n   \r\n   const remove = (taskId, toDoListId) => {\r\n      const toDoListIndex = getToDoListIndex(toDoListId);\r\n      const newTasks = toDoLists[toDoListIndex].tasks.filter(item => item.id !== taskId);\r\n      toDoLists[toDoListIndex].tasks = newTasks;\r\n      setToDoLists([...toDoLists]);\r\n\r\n   }\r\n\r\n   const complete = (taskId, toDoListId) => {\r\n      const now = Date.now();      \r\n      const toDoListIndex = getToDoListIndex(toDoListId);  \r\n      const newTasks = toDoLists[toDoListIndex].tasks.map(item => {\r\n         if (item.id === taskId)\r\n            item.completed = item.completed ? null : now;\r\n         return item;\r\n      });\r\n\r\n      // const allActive = newTasks.every(item => !item.completed);\r\n      // const allCompleted = newTasks.every(item => item.completed);\r\n\r\n      toDoLists[toDoListIndex].tasks = newTasks;\r\n      setToDoLists([...toDoLists]);      \r\n      // if (allActive || allCompleted) setFilter(\"all\");\r\n   }   \r\n\r\n   const addToDoList = (e) => {\r\n      const now = Date.now(); \r\n      const newTaskList = {\r\n         title: e && e.target.value? e.target.value: \"New to-do list\"\r\n         , created: now\r\n         , id: now\r\n         , tasks: []\r\n      };     \r\n      setToDoLists([...toDoLists, newTaskList])\r\n   }\r\n\r\n   const addTask = (id) => {\r\n      const now = Date.now();       \r\n      const newTask = {\r\n         title: `New Task`\r\n         , created: now\r\n         , id: now\r\n      };\r\n      const toDoList = toDoLists.find(item => item.id === id);\r\n      toDoList.tasks.push(newTask);\r\n      setToDoLists([...toDoLists]);\r\n      // setFilter(\"all\")\r\n   }\r\n   \r\n   const save = (taskId, title, toDoListId) => {\r\n      const toDoListIndex = getToDoListIndex(toDoListId);\r\n      const newTasks = toDoLists[toDoListIndex].tasks.map(item => {\r\n         if (item.id === taskId) {\r\n            item.title = title || \"-- no-name task :/ --\";\r\n            item.saved = true;\r\n         }\r\n         return item;\r\n      });\r\n      toDoLists[toDoListIndex].tasks = newTasks;\r\n      setToDoLists([...toDoLists]);\r\n      // setTasks(newTasks);\r\n   }\r\n\r\n   const updateToDoListTitle = (id, title) => {\r\n      const toDoListIndex = getToDoListIndex(id); \r\n      toDoLists[toDoListIndex].title = title;\r\n      toDoLists[toDoListIndex].saved = true;\r\n      setToDoLists([...toDoLists]);           \r\n   }\r\n\r\n   const exportJSONtoFile = (id) => {\r\n      let data = toDoLists;\r\n      let filename = \"atodolist.json\";\r\n      if (id){\r\n         data = toDoLists.find(item => item.id === id);\r\n         const newFileName = data.title.replace(/\\s+/g, '-').toLowerCase();\r\n         filename = `${newFileName}.json`; \r\n      }\r\n      const content = JSON.stringify(data, null, 2);\r\n      var pom = document.createElement('a');\r\n      pom.setAttribute('href', 'data:text/json;charset=utf-8,' + encodeURIComponent(content));\r\n      pom.setAttribute('download', filename);\r\n  \r\n      if (document.createEvent) {\r\n          var event = document.createEvent('MouseEvents');\r\n          event.initEvent('click', true, true);\r\n          pom.dispatchEvent(event);\r\n      }\r\n      else {\r\n          pom.click();\r\n      } \r\n   }\r\n\r\n   // const exportJSON = (id) => {\r\n   //    const data = id? toDoLists.find(item => item.id === id): toDoLists;\r\n   //    const content = JSON.stringify(data, null, 2);\r\n   //    var x = window.open();\r\n   //    x.document.open();\r\n   //    x.document.write('<html><body><pre>' + content + '</pre></body></html>');\r\n   //    x.document.close();      \r\n   // }\r\n   \r\n   const importJSON = (id) => {\r\n      const fileSelector = document.createElement('input');\r\n      fileSelector.setAttribute('type', 'file');\r\n      fileSelector.setAttribute('multiple', 'multiple');\r\n      fileSelector.click();\r\n      fileSelector.addEventListener(\"change\", (e) => handleImport(e, id));\r\n      ///setToDoLists([...data]);\r\n   }\r\n   \r\n   const handleImport = (e, id) => {\r\n      if (e) {\r\n         const now = Date.now();         \r\n         const file = e.target.files[0];\r\n         var reader = new FileReader();\r\n         reader.readAsText(file, \"UTF-8\");\r\n         reader.onload = (evt) => {\r\n            const toDoListIndex = getToDoListIndex(id);            \r\n            try{\r\n               const newToDoLists = [...toDoLists];\r\n               const newToDoList = JSON.parse(evt.target.result);\r\n               newToDoList.id = now;\r\n               newToDoList.created = now;\r\n               newToDoLists[toDoListIndex] = newToDoList;\r\n               console.log(newToDoList)\r\n               setToDoLists([...newToDoLists]);\r\n            }\r\n            catch(err){\r\n               console.error(err, \"Error importing JSON file:\", file.name)\r\n            }\r\n         }\r\n         reader.onerror = (evt) => {\r\n            console.error(\"Error importing JSON:\", file.name)\r\n         }\r\n      }\r\n   }\r\n   \r\n   useEffect(() => {\r\n      //if (toDoLists.length === 0) addToDoList();\r\n       localStorage.setItem('toDoLists', JSON.stringify(toDoLists));\r\n   }, [toDoLists]);      \r\n\r\n   return (\r\n      <TodoContext.Provider value={\r\n            [\r\n               toDoLists\r\n               , {\r\n                  // setState: setTasks, \r\n                  remove: remove, \r\n                  complete: complete, \r\n                  addTask: addTask, \r\n                  save: save,\r\n                  addToDoList: addToDoList,\r\n                  removeToDoList: removeToDoList,\r\n                  updateToDoListTitle: updateToDoListTitle,\r\n                  exportJSON: exportJSONtoFile,\r\n                  importJSON: importJSON\r\n               }\r\n            ]\r\n      }>\r\n         {props.children}\r\n      </TodoContext.Provider>\r\n   );\r\n}\r\n\r\nexport { TodoContext, TodoContextProvider }\r\n","import React from 'react';\r\nimport css from './Button.module.scss';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nconst Button = (props) => {\r\n   const {\r\n      onClick\r\n      , disabled\r\n      , outline = false\r\n      , link\r\n      , children\r\n      , title = \"\"\r\n      , color = \"primary\"\r\n      , icon = false\r\n      , circle = false\r\n      , active = false\r\n      , className = \"\"\r\n   } = props || {};\r\n\r\n   const ucfirst = (str) => str.charAt(0).toUpperCase() + str.slice(1);\r\n\r\n   return (\r\n      <button \r\n         onClick={onClick} \r\n         disabled={disabled} \r\n         title={title}\r\n         className={`\r\n            ${css.btn} \r\n            ${color?css[`btn${ucfirst(color)}`]:\"\"} \r\n            ${outline?css.btnOutline:\"\"}  \r\n            ${link?css.btnLink:\"\"} \r\n            ${circle?css.circle:\"\"}\r\n            ${className}\r\n            ${active?css.activeButton:\"\"}\r\n         `}\r\n      >\r\n         {\r\n            icon &&\r\n            <FontAwesomeIcon icon={icon} />\r\n         }\r\n         {children}\r\n      </button>\r\n   );\r\n}\r\n\r\nexport default Button;","import React from 'react';\r\nimport css from './EditableOnClick.module.scss';\r\n\r\nconst EditableOnClick = (props) => {\r\n    const {\r\n        id\r\n        , completed = \"\"\r\n        , created = \"\"\r\n        , title = \"\"\r\n        , saved = false\r\n        , editable = false\r\n        , handlers = {}\r\n     } = props || {};\r\n\r\n     const {\r\n        doSave = () => {}, \r\n        remove = () => {}, \r\n        setEditable = () => {}\r\n     } = handlers;\r\n\r\n     const click = () => setEditable(!editable);\r\n\r\n     const handleFocus = (e) => e.target.select();\r\n\r\n     const keyUp = (e, id) => {\r\n        const code = e.keyCode;\r\n        if (code === 13) doSave(e, id);\r\n        if (code === 27) {\r\n           if (!saved) remove(id);\r\n              else setEditable(false);\r\n        }\r\n     }\r\n\r\n    const inputElement = <input\r\n       type=\"text\"\r\n       className=\"form-control\"\r\n       name=\"newTitle\"\r\n       defaultValue={title}\r\n       onBlur={(e) => doSave(e, id)}\r\n       onKeyUp={(e) => keyUp(e, id)}\r\n       onFocus={handleFocus}\r\n       autoFocus\r\n    />;\r\n\r\n    const timeCompleted = completed? new Date(completed): \"\";\r\n    const taskCompleted = completed ? `, Completed: ${timeCompleted.toLocaleString()}` : \"\";\r\n    const taskCreated = new Date(created);\r\n    const taskTitle = `Created: ${taskCreated.toLocaleString()} ${taskCompleted} - Click to edit `;\r\n    return  editable || !saved ? inputElement : <span\r\n       title={taskTitle}\r\n       onClick={click}\r\n       className={`${completed ? css.taskCompleted : \"\"} ${css.pointer}`}\r\n    >\r\n       {title}\r\n    </span>;\r\n }\r\n\r\n export default EditableOnClick","import React, { useState, useContext } from 'react';\r\nimport css from './Task.module.scss';\r\nimport Button from '../Button/Button';\r\nimport TaskName from '../EditableOnClick/EditableOnClick';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\nimport { faCircle, faCheckCircle } from '@fortawesome/free-regular-svg-icons';\r\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\r\nimport { TodoContext } from '../../context/todo.context';\r\nlibrary.add(faTimes, faCircle, faCheckCircle);\r\n\r\nconst Task = (props) => {\r\n   const [editable, setEditable] = useState(false);\r\n   const handlers = useContext(TodoContext)[1];\r\n   const {\r\n      id\r\n      , completed = \"\"\r\n      , toDoListId = null\r\n   } = props || {};\r\n\r\n   const {\r\n      remove = () => { }\r\n      , complete = () => { }\r\n      , save = () => { }\r\n   } = handlers || {};\r\n\r\n   const doSave = (e, id) => {\r\n      setEditable(false);\r\n      save(id, e.target.value, toDoListId);\r\n   }\r\n\r\n   return (\r\n      <li className={css.taskItem}>\r\n         <div>\r\n            <Button link onClick={() => complete(id, toDoListId)} title={completed ? \"Mark incompleted\" : \"Mark completed\"}>\r\n               <FontAwesomeIcon color={completed ? css.primary : \"\"} size=\"lg\" icon={[\"far\", completed ? \"check-circle\" : \"circle\"]} />\r\n            </Button> <TaskName editable={editable} handlers={{remove: remove, doSave: doSave, setEditable: setEditable}} {...props} />\r\n            <span className={css.remove}>\r\n               <Button title=\"Delete\" link onClick={() => remove(id, toDoListId)} icon={\"times\"} />\r\n            </span>\r\n         </div> \r\n      </li>\r\n   );\r\n}\r\n\r\nexport default Task;","import React from 'react';\r\nimport css from './ButtonGroup.module.scss';\r\n\r\nconst ButtonGroup = (props) => {\r\n   return <div className={css.buttonGroup}>\r\n      {props.children}\r\n   </div>\r\n}\r\n\r\nexport default ButtonGroup;","import React, { useContext } from 'react';\r\nimport { TodoContext } from '../../context/todo.context';\r\nimport Button from '../Button/Button';\r\nimport ButtonGroup from '../ButtonGroup/ButtonGroup';\r\nimport css from './Filters.module.scss';\r\n\r\n\r\nconst Filters = (props) => {\r\n   const Badge = ({ value, color }) => {\r\n      return (<span className={css.filterBadge} style={{ backgroundColor: color ? color : \"\" }}>{value}</span>)\r\n   }\r\n   const toDoLists = useContext(TodoContext)[0];\r\n   const [filter, doFilter] = props.filters || {};\r\n   const tasks = toDoLists.find(item => item.id === props.id).tasks;\r\n   const activeTasks = tasks.filter(item => !item.completed);\r\n   const completedTasks = tasks.length - activeTasks.length;\r\n\r\n   return <div className={css.filters}>\r\n      <ButtonGroup>\r\n         <Button \r\n            active={filter === \"ALL\"} \r\n            outline \r\n            color={filter === \"ALL\" ? \"dark\" : \"secondary\"} \r\n            onClick={() => doFilter(\"ALL\")}\r\n         >\r\n            All tasks <span className={css.filterTextBadge}>({tasks.length})</span>\r\n            </Button><Button \r\n            active={filter === \"ACTIVE\"} \r\n            outline \r\n            color={filter === \"ACTIVE\" ? \"dark\" : \"secondary\"} \r\n            onClick={() => doFilter(\"ACTIVE\")}\r\n         >\r\n            Active <Badge \r\n            value={activeTasks.length} />\r\n         </Button><Button \r\n            active={filter === \"COMPLETED\"} \r\n            outline \r\n            color={filter === \"COMPLETED\" ? \"dark\" : \"secondary\"} \r\n            onClick={() => doFilter(\"COMPLETED\")}\r\n         >\r\n            Completed <span className={css.filterTextBadge}>({completedTasks})</span>\r\n         </Button>\r\n      </ButtonGroup>\r\n   </div>\r\n}\r\n\r\nexport default Filters;","import React, { useContext } from 'react';\r\nimport css from './Progress.module.scss';\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\nimport { faCircle, faCheckCircle } from '@fortawesome/free-regular-svg-icons';\r\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\r\nimport { TodoContext } from '../../context/todo.context';\r\nlibrary.add(faTimes, faCircle, faCheckCircle);\r\n\r\nconst Progress = (props) => {\r\n   const toDoLists = useContext(TodoContext)[0];\r\n   if (toDoLists.length > 0){\r\n      const tasks = toDoLists.find(item => item.id === props.id).tasks;\r\n      const completed = tasks.filter(item => item.completed);\r\n      const percentage = completed.length * 100 / tasks.length;\r\n      const progressStyle = {\r\n         width: `${percentage}%`\r\n         , backgroundColor: `hsl(${percentage * 1}, 60%, 45%)`\r\n      }\r\n   \r\n      return (\r\n         <div className=\"text-center\">\r\n            <h5 className=\"m-0 text-muted\">{percentage.toLocaleString(undefined, {maximumFractionDigits: 1})} % completed</h5>\r\n            <div className={css.progressBarContainer}>\r\n               <div className={css.progressBar} style={progressStyle} ></div>\r\n            </div>\r\n         </div>\r\n      );\r\n   }\r\n   else return \"\";\r\n}\r\n\r\nexport default Progress;","import React, { useContext } from 'react';\r\nimport css from './PopupMenu.module.scss'; \r\nimport { TodoContext } from '../../context/todo.context';\r\n\r\nconst PopupMenu = ({exportJSON, importJSON, id}) => {\r\n    const [toDoLists, ] = useContext(TodoContext);\r\n    const toDoList = toDoLists.find(item => item.id === id);    \r\n    const menuItems = [\r\n        {\r\n            id: \"export\"\r\n            , label: \"Export JSON\"\r\n            , action: exportJSON\r\n            , hidden: !toDoList.tasks || toDoList.tasks.length === 0\r\n        },\r\n        {\r\n            id: \"import\"\r\n            , label: \"Import JSON\"\r\n            , action: importJSON\r\n        }\r\n    ];\r\n    const items = menuItems.map(item => {\r\n        let li = item.hidden? \"\": <li key={item.id}><a onClick={item.action}>{item.label}</a></li>\r\n        return li\r\n        \r\n    });\r\n    return <ul className={css.popupMenu}>{items}</ul>;\r\n}\r\n\r\nexport default PopupMenu;","import React, { useState, useContext } from 'react';\r\nimport Task from '../Task/Task';\r\nimport Filters from '../../components/Filters/Filters';\r\nimport { TodoContext } from '../../context/todo.context';\r\nimport Button from '../../components/Button/Button';\r\nimport Progress from '../../components/Progress/Progress';\r\nimport ToDoListTitle from '../EditableOnClick/EditableOnClick';\r\nimport css from './TaskList.module.scss';\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\nimport { faPlus, faSearch, faSpinner, faEllipsisV } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport PopupMenu from '../../components/PopupMenu/PopupMenu';\r\n\r\nlibrary.add(faPlus, faSearch, faSpinner, faEllipsisV);\r\n\r\nconst TaskList = (props) => {\r\n   const [search, setSearch] = useState();\r\n   const [editable, setEditable] = useState();\r\n   const [filter, setFilter] = useState('ALL');\r\n   const [menu, setMenu] = useState(false);\r\n   const [toDoLists, handlers] = useContext(TodoContext);\r\n\r\n   const toDoList = toDoLists.find(item => item.id === props.id);\r\n   const tasks = toDoList.tasks || [];\r\n   const {\r\n      addTask,\r\n      updateToDoListTitle\r\n   } = handlers || {};\r\n\r\n   const keyUp = (e) => {\r\n      if (e.keyCode === 27) setSearch(\"\");\r\n   }\r\n\r\n   const doFilter = (f) => {\r\n      setFilter(f);\r\n   }\r\n\r\n   const doSave = (e) => {\r\n      setEditable(false);\r\n      updateToDoListTitle(props.id, e.target.value);\r\n   }   \r\n\r\n   const toggleMenu = () => {\r\n      setMenu(!menu);\r\n   }\r\n\r\n   const exportJSON = () => {\r\n      setMenu(false);\r\n      handlers.exportJSON(toDoList.id);\r\n   }\r\n\r\n   const importJSON = () => {\r\n      setMenu(false);\r\n      handlers.importJSON(toDoList.id);\r\n   }\r\n\r\n   const searchedTasks = search ? tasks.filter(item => {\r\n      return item.title.toLowerCase().includes(search.toLowerCase())\r\n   }) : tasks;\r\n\r\n\r\n   const filterTasks = (f, tasks) => {\r\n      let ft = [];\r\n      switch(f){\r\n         case \"ALL\": {\r\n            ft = tasks;\r\n            break;\r\n         }\r\n         case \"ACTIVE\": {\r\n            ft = tasks.filter(item => !item.completed)\r\n            break;\r\n         }\r\n         case \"COMPLETED\": {\r\n            ft = tasks.filter(item => item.completed)\r\n            break;\r\n         }\r\n         default: {\r\n            ft = tasks?tasks: []\r\n         }\r\n      }\r\n      return ft;\r\n   }\r\n   const filteredTasks = filterTasks(filter, searchedTasks);\r\n   const taskCount = filteredTasks.length;\r\n   const taskList = filteredTasks.length > 0 ? filteredTasks.map(item => <Task {...item} key={item.id} toDoListId={props.id} />) : [];\r\n\r\n   const allActive = tasks.every(item => !item.completed);\r\n   const allCompleted = tasks.every(item => item.completed);   \r\n\r\n   const savedTasks = tasks.filter(item => item.saved).length;\r\n\r\n   return (\r\n      <section className={css.toDoListModule}>\r\n         <Button color=\"link\" icon=\"ellipsis-v\" className={css.moreButton} onClick={toggleMenu} />\r\n         <Button color=\"link\" icon=\"times\" className={css.closeButton} onClick={() => handlers.removeToDoList(props.id)} />\r\n         {\r\n            menu &&\r\n            <PopupMenu exportJSON={exportJSON} importJSON={importJSON} id={props.id} />\r\n         }\r\n         {\r\n            savedTasks > 0 &&\r\n            <Progress id={props.id} />\r\n         }\r\n\r\n         <header className={css.toDoListHeader}>\r\n            <h3>\r\n               <ToDoListTitle editable={editable} handlers={{doSave: doSave, setEditable: setEditable}} {...toDoList} />\r\n               {\r\n                  taskCount > 0 && !editable &&\r\n                  <span> ({taskCount})</span>\r\n               }\r\n            </h3>\r\n            <Button color=\"primary\" circle onClick={() => addTask(props.id)} icon=\"plus\" title=\"Add task\" className={css.addButton}></Button>\r\n         </header>\r\n         {\r\n            savedTasks > 1 &&\r\n            <div className={css.searchBox}>\r\n               <input\r\n                  type=\"text\"\r\n                  name=\"search\"\r\n                  value={search ? search : \"\"}\r\n                  placeholder=\"Search tasks…\"\r\n                  className=\"form-control border-box w-100\"\r\n                  onChange={(e) => setSearch(e.target.value)}\r\n                  onKeyUp={keyUp}\r\n                  title={\"Search/filter tasks by title. Click Esc to remove the filter.\"}\r\n               />\r\n               <FontAwesomeIcon icon=\"search\" color=\"silver\" className={css.searchButton} />\r\n            </div>\r\n         }\r\n         {\r\n            savedTasks > 1 && !allCompleted && !allActive &&\r\n            <Filters id={props.id} filters={[filter, doFilter]} />\r\n         }\r\n         <div>\r\n            {\r\n               filteredTasks.length < 1 &&\r\n               <p><em>-- No tasks found --</em></p>\r\n            }\r\n            <ul className={css.taskList}>\r\n               {taskList}\r\n            </ul>\r\n         </div>\r\n      </section>\r\n   )\r\n}\r\n\r\nexport default TaskList;","import React, { useContext } from 'react';\r\nimport TaskList from '../TaskList/TaskList';\r\nimport Button from '../Button/Button';\r\nimport { TodoContext } from '../../context/todo.context';\r\nimport css from './ToDoLists.module.scss';\r\n\r\nconst Lists = () => {\r\n   const toDoLists = useContext(TodoContext)[0];\r\n   return toDoLists.map(item => <TaskList key={item.id} id={item.id} />)\r\n}\r\n\r\nconst ToDoLists = () => {\r\n   const [toDoLists, handlers] = useContext(TodoContext);\r\n   return <>\r\n      <div className={css.addToDoList}>\r\n         <Button color=\"primary\" circle icon=\"plus\" onClick={handlers.addToDoList} title=\"Add new todo list\" />\r\n      </div>\r\n      <div className={css.toDoLists}>\r\n         <Lists />\r\n         {\r\n            toDoLists.length === 0 && \r\n            <div className=\"text-center mx-auto\">\r\n               <em>-- No to-do lists yet --</em>\r\n               <p>\r\n                  <Button color=\"primary\" onClick={handlers.addToDoList}> Create a new one</Button>\r\n               </p>\r\n            </div>\r\n            \r\n         }\r\n      </div>\r\n   </>\r\n}\r\n\r\nexport default ToDoLists;\r\n","import React from 'react';\r\nimport { TodoContextProvider } from './context/todo.context';\r\nimport ToDoLists from './components/ToDoLists/ToDoLists';\r\nimport css from './App.module.scss';\r\n\r\nconst App = () => {\r\n   return (\r\n      <div className={css.app}>\r\n         <TodoContextProvider>\r\n            <ToDoLists />\r\n         </TodoContextProvider>\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}