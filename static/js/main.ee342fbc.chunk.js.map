{"version":3,"sources":["components/TaskList/TaskList.module.scss","App.module.scss","components/Button/Button.js","context/todo.context.js","components/Task/Task.js","components/TaskList/TaskList.js","App.js","index.js","components/Button/Button.module.scss","components/Task/Task.module.scss"],"names":["module","exports","Button","props","str","onClick","disabled","outline","link","children","title","color","icon","circle","className","css","btn","charAt","toUpperCase","slice","btnOutline","btnLink","TodoContext","React","createContext","TodoContextProvider","useState","JSON","parse","localStorage","getItem","state","setState","useEffect","setItem","stringify","Provider","value","remove","taskId","filter","item","id","complete","now","Date","newTasks","map","completed","addTask","e","newTask","created","save","saved","library","add","faTimes","faCircle","faCheckCircle","Task","editable","setEditable","handlers","useContext","click","doSave","target","handleFocus","select","TaskName","taskNameInput","type","name","defaultValue","onBlur","onKeyUp","code","keyCode","keyUp","onFocus","autoFocus","timeCompleted","taskCompleted","toLocaleString","taskCreated","taskTitle","pointer","taskItem","size","faPlus","TaskList","search","setSearch","tasks","searchedTasks","toLowerCase","includes","taskCount","length","taskList","key","unfinished","announcement","addButton","placeholder","onChange","App","app","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ee342fbc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"taskList\":\"TaskList_taskList__1QZ0i\",\"addButton\":\"TaskList_addButton__2K-0R\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__3NoNF\"};","import React from 'react';\r\nimport css from './Button.module.scss';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nconst Button = (props) => {\r\n   const {\r\n      onClick\r\n      , disabled\r\n      , outline = false\r\n      , link\r\n      , children\r\n      , title = \"\"\r\n      , color = \"primary\"\r\n      , icon = false\r\n      , circle = false\r\n   } = props || {};\r\n\r\n   const ucfirst = (str) => str.charAt(0).toUpperCase() + str.slice(1);\r\n\r\n   return (\r\n      <button \r\n         onClick={onClick} \r\n         disabled={disabled} \r\n         title={title}\r\n         className={`${css.btn} ${color?css[`btn${ucfirst(color)}`]:\"\"} ${outline?css.btnOutline:\"\"}  ${link?css.btnLink:\"\"} ${circle?css.circle:\"\"}`}\r\n      >\r\n         {\r\n            icon &&\r\n            <FontAwesomeIcon icon={icon} />\r\n         }\r\n         {children}\r\n      </button>\r\n   );\r\n}\r\n\r\nexport default Button;","import React, {useState, useEffect} from 'react';\r\nconst TodoContext = React.createContext([{}, ()=>{}]);\r\n\r\nconst TodoContextProvider = (props) => {\r\n   const [state, setState] = useState(JSON.parse(localStorage.getItem('tasks')) || []);\r\n   useEffect(() => {\r\n      localStorage.setItem('tasks', JSON.stringify(state));\r\n   }, [state]);   \r\n\r\n   const remove = (taskId) => {\r\n      setState([...state.filter(item => item.id !== taskId)]);\r\n   }\r\n\r\n   const complete = (taskId) => {\r\n      const now = Date.now();      \r\n      const newTasks = state.map(item => {\r\n         if (item.id === taskId)\r\n            item.completed = item.completed ? null : now;\r\n         return item;\r\n      });\r\n      setState(newTasks);\r\n   }   \r\n\r\n   const addTask = (e) => {\r\n      const now = Date.now();       \r\n      const newTask = {\r\n         title: `Nový úkol`\r\n         , created: now\r\n         , id: now\r\n      };\r\n      setState([...state, newTask]);\r\n   }\r\n\r\n   const save = (taskId, title) => {\r\n      const newTasks = state.map(item => {\r\n         if (item.id === taskId) {\r\n            item.title = title || \"-- úkol bez názvu :/ --\";\r\n            item.saved = true;\r\n         }\r\n         return item;\r\n      });\r\n      setState(newTasks);\r\n   }\r\n\r\n   return (\r\n      <TodoContext.Provider value={[state, {\r\n         setState: setState, \r\n         remove: remove, \r\n         complete: complete, \r\n         addTask: addTask, \r\n         save: save\r\n      }\r\n      ]}>\r\n         {props.children}\r\n      </TodoContext.Provider>\r\n   );\r\n}\r\n\r\nexport { TodoContext, TodoContextProvider }\r\n","import React, { useState, useContext } from 'react';\r\nimport css from './Task.module.scss';\r\nimport Button from '../Button/Button';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\nimport { faCircle, faCheckCircle } from '@fortawesome/free-regular-svg-icons';\r\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\r\nimport { TodoContext } from '../../context/todo.context';\r\nlibrary.add(faTimes, faCircle, faCheckCircle);\r\n\r\nconst Task = (props) => {\r\n   const [editable, setEditable] = useState(false);\r\n   const handlers = useContext(TodoContext)[1];\r\n\r\n   const {\r\n      id\r\n      , completed = \"\"\r\n      , created = \"\"\r\n      , title = \"\"\r\n      , saved = false\r\n   } = props || {};\r\n\r\n   const {\r\n      remove = () => { }\r\n      , complete = () => { }\r\n      , save = () => { }\r\n   } = handlers || {};\r\n\r\n   const click = () => setEditable(!editable);\r\n\r\n   const doSave = (e, id) => {\r\n      setEditable(false);\r\n      save(id, e.target.value);\r\n   }\r\n\r\n   const keyUp = (e, id) => {\r\n      const code = e.keyCode;\r\n      if (code === 13) doSave(e, id);\r\n      if (code === 27) setEditable(false);\r\n   }\r\n\r\n   const handleFocus = (e) => e.target.select();\r\n   \r\n   const TaskName = ({editable}) => {\r\n      const taskNameInput = <input\r\n         type=\"text\"\r\n         className=\"form-control\"\r\n         name=\"newTitle\"\r\n         defaultValue={title}\r\n         onBlur={(e) => doSave(e, id)}\r\n         onKeyUp={(e) => keyUp(e, id)}\r\n         onFocus={handleFocus}\r\n         autoFocus\r\n      />;\r\n\r\n      const timeCompleted = completed? new Date(completed): \"\";\r\n      const taskCompleted = completed ? `, Ukončen: ${timeCompleted.toLocaleString()}` : \"\";\r\n      const taskCreated = new Date(created);\r\n      const taskTitle = `Vytvořen: ${taskCreated.toLocaleString()} ${taskCompleted} - Kliknutím upravte text `;\r\n\r\n      return  editable || !saved ? taskNameInput : <span\r\n         title={taskTitle}\r\n         onClick={click}\r\n         className={`${completed ? css.taskCompleted : \"\"} ${css.pointer}`}\r\n      >\r\n         {title}\r\n      </span>;\r\n   }\r\n\r\n   return (\r\n      <li className={css.taskItem}>\r\n         <span>\r\n            <Button link onClick={() => complete(id)} title={completed ? \"Zrušit označení hotového úkolu\" : \"Označit jako hotový\"}>\r\n               <FontAwesomeIcon color={completed ? \"#007022\" : \"\"} size=\"lg\" icon={[\"far\", completed ? \"check-circle\" : \"circle\"]} />\r\n            </Button> <TaskName editable={editable} />\r\n         </span> <span className={css.remove}>\r\n            <Button title=\"Smazat\" link onClick={() => remove(id)} icon={\"times\"} />\r\n         </span>\r\n      </li>\r\n   );\r\n}\r\n\r\nexport default Task;","import React, { useState, useContext } from 'react';\r\nimport Task from '../Task/Task';\r\nimport { TodoContext } from '../../context/todo.context';\r\nimport Button from '../../components/Button/Button';\r\nimport css from './TaskList.module.scss';\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\r\nlibrary.add(faPlus);\r\n\r\nconst TaskList = () => {\r\n   const [search, setSearch] = useState();\r\n   const [tasks, handlers] = useContext(TodoContext);\r\n   const {\r\n      addTask\r\n   } = handlers || {};\r\n\r\n   const keyUp = (e) => {\r\n      if (e.keyCode === 27) setSearch(\"\");\r\n   }\r\n\r\n   const searchedTasks = search ? tasks.filter(item => {\r\n      return item.title.toLowerCase().includes(search.toLowerCase())\r\n   }) : tasks;\r\n\r\n\r\n   const taskCount = searchedTasks.length;\r\n   const taskList = searchedTasks.length > 0 ? searchedTasks.map(item => <Task {...item} key={item.id} />) : [];\r\n\r\n   const unfinished = tasks.filter(item => !item.completed);\r\n   const announcement = unfinished.length > 0 ? `Zbývá ještě udělat (${unfinished.length}):` : <>Všechno hotovo, <strong>gratulki!</strong></>;\r\n   return (\r\n      <>\r\n         <h3>\r\n            Seznam úkolů\r\n            {\r\n               taskCount > 0 &&\r\n               <span> ({taskCount})</span>\r\n            }\r\n            <span className={css.addButton}>\r\n               <Button color=\"primary\" circle onClick={addTask} icon=\"plus\" title=\"Přidat úkol\"></Button>\r\n            </span>\r\n         </h3>\r\n         {\r\n            tasks.length > 0 &&\r\n            <input\r\n               type=\"text\"\r\n               name=\"search\"\r\n               value={search ? search : \"\"}\r\n               placeholder=\"Hledat úkol…\"\r\n               className=\"form-control\"\r\n               onChange={(e) => setSearch(e.target.value)}\r\n               onKeyUp={keyUp}\r\n               title={\"Vyhledávejte/filtrujte úkoly dle názvu. Stisknutím Esc se filtr zruší.\"}\r\n            />\r\n         }\r\n         <p>\r\n            {\r\n               taskCount > 0 &&\r\n               announcement\r\n            }\r\n         </p>\r\n         <div>\r\n            {\r\n               searchedTasks.length < 1 &&\r\n               <p><em>-- Nenašel jsem žádný úkol --</em></p>\r\n            }\r\n            <ul className={css.taskList}>\r\n               {taskList}\r\n            </ul>\r\n         </div>\r\n      </>\r\n   )\r\n}\r\n\r\nexport default TaskList;","import React from 'react';\nimport TaskList from './components/TaskList/TaskList';\nimport { TodoContextProvider } from './context/todo.context';\nimport css from './App.module.scss';\n\nconst App = () => {\n   return (\n      <div className={css.app}>\n         <TodoContextProvider>\n            <TaskList />\n         </TodoContextProvider>\n      </div>\n   );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"Button_btn__1PDgW\",\"btnPrimary\":\"Button_btnPrimary__1cusH\",\"btnOutline\":\"Button_btnOutline__1B0Zy\",\"btnLink\":\"Button_btnLink__xQmtj\",\"circle\":\"Button_circle__25JQl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"taskItem\":\"Task_taskItem__2tj_t\",\"remove\":\"Task_remove__5DzNr\",\"taskCompleted\":\"Task_taskCompleted__3bA8R\",\"pointer\":\"Task_pointer__19i2T\",\"highlight\":\"Task_highlight__1jEt-\"};"],"sourceRoot":""}